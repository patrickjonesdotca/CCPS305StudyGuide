<!DOCTYPE html>
<html class="jsEnabled togglingEnabled" dir="ltr" lang="en"><head>
		<title>Rope (computer science) - Wikipedia, the free encyclopedia</title>
		<meta http-equiv="content-type" content="text/html; charset=UTF-8">
		<meta name="robots" content="noindex,nofollow">		<link rel="stylesheet" href="Rope_%28computer_science%29_files/load.css" type="text/css" media="all">		<meta name="viewport" content="initial-scale=1.0, user-scalable=no">
		<link rel="apple-touch-icon" href="http://en.wikipedia.org/apple-touch-icon.png">		<script type="text/javascript">
			if( typeof mw === 'undefined' ) {
				mw = {};
			}
			var mwMobileFrontendConfig = {"messages":{"expand-section":"Show","collapse-section":"Hide","remove-results":"Back...","mobile-frontend-search-noresults":"No article titles match your search. Change your search, or press the keyboard search button to search inside articles.","mobile-frontend-search-help":"Type search term above and matching article titles will appear here.","contents-heading":"Contents","language-heading":"Read this article in","mobile-frontend-close-section":"Close this section","mobile-frontend-language-header":"This article is available in 3 languages","mobile-frontend-language-footer":"<a href=\"\/wiki\/Special:Special:MobileOptions\/Language\">Wikipedia is available in other languages.<\/a>","mobile-frontend-language-site-choose":"Search language","mobile-frontend-language-site-nomatches":"No matching languages"},"settings":{"scriptPath":"\/w","useFormatCookieName":"mf_mobileFormat","useFormatCookieDuration":-1,"useFormatCookieDomain":"en.wikipedia.org","useFormatCookiePath":"\/","stopMobileRedirectCookieName":"stopMobileRedirect","stopMobileRedirectCookieDuration":15552000,"stopMobileRedirectCookieDomain":".wikipedia.org","hookOptions":""}};
			document.documentElement.className = 'jsEnabled page-loading';		</script>
		<link rel="canonical" href="http://en.wikipedia.org/wiki/Rope_%28computer_science%29">
	</head>
	<body class="mobile mw-mf-checkboxes">
							<div id="mw-mf-header">
					<form id="mw-mf-searchForm" action="/w/index.php" class="search_bar" method="get">
							<img alt="Logo" id="mw-mf-logo" src="Rope_%28computer_science%29_files/W_logo_for_Mobile_Frontend.gif" width="35" height="22">
						<input value="Special:Search" name="title" type="hidden">
			<div id="mw-mf-sq" class="divclearable">
				<input name="search" id="mw-mf-search" size="22" autocomplete="off" maxlength="1024" class="search" placeholder="Type your search here..." type="search">
				<img src="Rope_%28computer_science%29_files/blank.gif" alt="Clear" class="clearlink" id="mw-mf-clearsearch" title="Clear">
			</div>
						<button id="goButton" class="goButton" type="submit">
				<img src="Rope_%28computer_science%29_files/blank.gif" alt="Go" title="Go">
			</button>
					</form>
									<div class="nav" id="nav">
				<div id="mw-mf-language-selection">
		Language:<br>
		<select id="languageselection"><option value="http://en.wikipedia.org/wiki/Rope_(computer_science)" selected="selected">English</option><option value="//fr.m.wikipedia.org/wiki/Corde_(informatique)">français</option><option value="//th.m.wikipedia.org/wiki/%E0%B9%82%E0%B8%A3%E0%B9%89%E0%B8%9B">ไทย</option></select>
	</div><br>
			<a href="http://en.m.wikipedia.org/wiki/Main_Page" id="homeButton" class="button">Home</a>
			<a href="http://en.m.wikipedia.org/wiki/Special:Random" id="randomButton" class="button">Random</a>
			</div>
		</div>
				<div id="results"><ul class="suggestions-results" title="No Results"><li class="suggestions-result">Type search term above and matching article titles will appear here.</li></ul></div>
		<div class="show" id="content_wrapper">
				<div id="content">
			<h1 id="firstHeading">Rope (computer science)</h1>			
<table class="metadata plainlinks ambox ambox-content ambox-multiple_issues compact-ambox" style=""><tbody><tr>
<td class="mbox-image">
<div style="width: 52px;"><img alt="" src="Rope_%28computer_science%29_files/Ambox_content.png" width="40" height="40"></div>
</td>
<td class="mbox-text" style="">
<span class="mbox-text-span"><b>This article has multiple issues</b>. Please help <b><a class="external text" href="http://en.wikipedia.org/w/index.php?title=Rope_%28computer_science%29&amp;action=edit">improve it</a></b> or discuss these issues on the <b><a href="http://en.m.wikipedia.org/wiki/Talk:Rope_%28computer_science%29" title="Talk:Rope (computer science)">talk page</a></b>.</span>
<table class="metadata plainlinks ambox ambox-content ambox-one_source" style=""><tbody><tr>
<td class="mbox-image">
<div style="width: 52px;"><img alt="Question book-new.svg" src="Rope_%28computer_science%29_files/50px-Question_book-new.png" width="50" height="39"></div>
</td>
<td class="mbox-text" style=""><span class="mbox-text-span">This article <b>relies largely or entirely upon a <a href="http://en.m.wikipedia.org/wiki/Wikipedia:Identifying_reliable_sources" title="Wikipedia:Identifying reliable sources">single source</a></b>. <span class="hide-when-compact">Relevant discussion may be found on the <a href="http://en.m.wikipedia.org/wiki/Talk:Rope_%28computer_science%29#.23" title="Talk:Rope (computer science)">talk page</a>. Please help <a class="external text" href="http://en.wikipedia.org/w/index.php?title=Rope_%28computer_science%29&amp;action=edit">improve this article</a> by introducing <a href="http://en.m.wikipedia.org/wiki/Wikipedia:Citing_sources" title="Wikipedia:Citing sources">citations</a> to additional sources.</span> <small><i>(September 2011)</i></small> </span></td>
</tr></tbody></table>
<table class="metadata plainlinks ambox ambox-style ambox-Copy_edit" style=""><tbody><tr>
<td class="mbox-image">
<div style="width: 52px;"><img alt="" src="Rope_%28computer_science%29_files/36px-Acap.png" width="36" height="40"></div>
</td>
<td class="mbox-text" style=""><span class="mbox-text-span">This article <b>may require <a href="http://en.m.wikipedia.org/wiki/Wikipedia:Basic_copyediting" title="Wikipedia:Basic copyediting">copy editing</a> for grammar, style, cohesion, tone, or spelling</b>. <span class="hide-when-compact">You can assist by <a class="external text" href="http://en.wikipedia.org/w/index.php?title=Rope_%28computer_science%29&amp;action=edit">editing it</a>.</span> <small><i>(May 2011)</i></small> </span></td>
</tr></tbody></table>
</td>
</tr></tbody></table>
<div class="thumb tright">
<div class="thumbinner" style="width:363px;">
<a href="http://en.m.wikipedia.org/wiki/File:Rope_example.jpg" class="image"><img alt="" src="Rope_%28computer_science%29_files/361px-Rope_example.jpg" class="thumbimage" width="361" height="300"></a>
<div class="thumbcaption">

A simple rope built on the string of "Hello_my_name_is_Simon".</div>
</div>
</div>
<p>In <a href="http://en.m.wikipedia.org/wiki/Computer_programming" title="Computer programming">computer programming</a> a <b>rope</b>, or <b>cord</b>, is a <a href="http://en.m.wikipedia.org/wiki/Data_structure" title="Data structure">data structure</a> for efficiently storing and manipulating a very long <a href="http://en.m.wikipedia.org/wiki/String_%28computer_science%29" title="String (computer science)">string</a>.
 For example, a text editing program may use a rope to represent the 
text being edited, so that operations such as insertion, deletion, and 
random access can be done efficiently.<sup id="cite_ref-Boehm_0-0" class="reference"><a href="#cite_note-Boehm-0"><span>[</span>1<span>]</span></a></sup></p>
<div class="section"><h2 class="section_heading" id="section_1"><button>Show</button><span id="Description">Description</span></h2><div class="content_block" id="content_1">
<p>A rope is a binary tree in which each node has a weight. Leaf nodes 
(as well as some single-child internal nodes) also contain a short 
string. The weight of a node is equal to the length of its string plus 
the sum of all the weights in its left subtree. Thus a node with two 
children divides the whole string into two parts: the left subtree 
stores the first part of the string, the right subtree stores the second
 part, and the weight is the length of the first part.</p>
<p>Seen from another perspective, the binary tree of a rope can be seen 
as several levels of nodes. The bottom level contains all the nodes that
 have a short string. Higher levels have fewer and fewer nodes, until 
finally there is just one root node in the top level. We can build the 
rope by putting all the nodes with short strings in the bottom level, 
then randomly picking half those nodes in order to form parent nodes in 
the next level. Nodes with no parent (for example, the two nodes storing
 the strings "my_" and "me_i" in the diagram above) become the right 
child of the node located immediately to their left, thus forming a 
chain. In this way, we can build higher levels one level at a time. We 
stop when there is only one node remaining.</p>
</div><a id="anchor_1" href="#section_1" class="section_anchors back_to_top">↑Jump back a section</a></div><div class="section"><h2 class="section_heading" id="section_2"><button>Show</button><span id="Operations">Operations</span></h2><div class="content_block" id="content_2">
<h3> <span class="mw-headline" id="Index">Index</span>
</h3>
<p>Definition: Index(i): return the character at position i<br>
Time complexity: O(log N) where N is the length of the rope</p>
<p>To retrieve the i-th character, we begin a <a href="http://en.m.wikipedia.org/wiki/Recursion" title="Recursion">recursive</a> search from the root node:</p>
<pre>// <i>Note: Assumes 1-based indexing.</i>
<b>function</b> index(<b>RopeNode</b> node, <b>integer</b> i)
    <b>if</b> node.weight &lt; i <b>then</b>
        <b>return</b> index(node.right, i - node.weight)
    <b>else</b>
        <b>if</b> exists(node.left) <b>then</b>
            <b>return</b> index(node.left, i)
        <b>else</b>
            <b>return</b> node.string[i]
        <b>endif</b>
    <b>endif</b>
<b>end</b>
</pre>
<p>For example, suppose we are looking for the character at i=10 in the 
following rope. We start at the root node, find that 22 is greater than 
10 and there's a left child, so we go to the left child. Next we find 
that 9 is less than 10, so we subtract 9 from 10 (leaving i=1) and go to
 the right child. Then because 7 is greater than 1 and there's a left 
child, we go to the left child. There we find that 6 is greater than 1 
and there's a left child, so we go to the left child again. Finally we 
see that 2 is greater than 1 but there is no left child, so we take the 
character at index 1 of the short string "na", returning "n" as the 
final answer.</p>
<center><a href="http://en.m.wikipedia.org/wiki/File:Search_rope.jpg" class="image"><img alt="Search rope.jpg" src="Rope_%28computer_science%29_files/400px-Search_rope.jpg" width="400" height="275"></a></center>
<h3> <span class="mw-headline" id="Split">Split</span>
</h3>
<p>Definition: Split (i, S): split the string S into two new strings S1 and S2, S1 = C1,…Ci and S2 = Ci+1, …, Cm.</p>
<p>There are two cases: in the first, the i-th character is the end of 
an array like the following picture; in the second, the character is in 
the middle of an array. We can reduce the second case to the first case 
as follows: first we split the node at the character into two nodes each
 with part of the array and make the second node as the right child of 
first node. We handle the first case as explained in the following 
example.</p>
<p>For example, we want to split the following rope into two parts. 
First we query the i-th character to locate the node v at the bottom 
level. Then we cut down the link between v and the right child of v, 
which we'll call v’. Then go up to the parent u and subtract the weight 
of v’ from the weight of u. Since the parent has the right child of u, 
which we'll call u’, modify u’ to link to v’ and increase the weight of 
u’ by the weight of its new left child v’. The former left child of u’ 
become the right child of v’. The result is shown in the second picture 
below. In this way, we continue up and reach the parent of u, which 
we'll call w. First subtract the weight of v’ from the weight of w. Then
 modify the right child of w, which we'll call w’, to link to u’ and the
 former child of w’ becomes the right child of u’. Then increase the 
weight of w’ by the weight of v’. Then go up and reach the parent of w, 
which we'll call x. Since w is already the right child of x, there is no
 need for further modification. Then go up and reach the parent of x, 
which we'll call y, and reduce the weight of x by the weight of 
w’.Clearly, the expected cost is O(log N).</p>
<center><a href="http://en.m.wikipedia.org/wiki/File:Split1_rope.jpg" class="image" title="original"><img alt="original" src="Rope_%28computer_science%29_files/300px-Split1_rope.jpg" width="300" height="218"></a></center>
<center><a href="http://en.m.wikipedia.org/wiki/File:Split2_rope.jpg" class="image" title="step1"><img alt="step1" src="Rope_%28computer_science%29_files/300px-Split2_rope.jpg" width="300" height="218"></a></center>
<center><a href="http://en.m.wikipedia.org/wiki/File:Split3_rope.jpg" class="image" title="step2"><img alt="step2" src="Rope_%28computer_science%29_files/300px-Split3_rope.jpg" width="300" height="218"></a></center>
<h3> <span class="mw-headline" id="Concat">Concat</span>
</h3>
<p>Definition: Concat(S1, S2): concatenate two rope S1, S2 into one single rope.</p>
<p>This operation can be considered as the reversion of split. The time 
complexity is also O(log N). Alternatively, create a new root node with 
left=S1 and right=S2. This is constant time, but can lead to an 
unbalanced tree.</p>
<h3> <span class="mw-headline" id="Insert">Insert</span>
</h3>
<p>Definition: Insert(i, S’): insert the string S’ beginning at position
 i in the string s, to form a new string C1,….,Ci, S’, Ci+1,…, Cm.</p>
<p>This operation can be done by a split() and a concat(). First split 
the rope at the i-th character, the add a new node v with string(v) = S’
 to the right child of the rightmost node of the first rope. Then update
 the weight of nodes in the path from the new node to root. Finally 
concatenate the two ropes. Because the split() and concat() both cost 
O(logN) time, the time complexity of this operation is also O(logN).</p>
<h3> <span class="mw-headline" id="Delete">Delete</span>
</h3>
<p>Definition: Delete(i, j): delete the substring Ci, …, Ci+j-1, from s to form a new string C1, …, Ci-1, Ci+j, …, Cm.</p>
<p>This operation can be done by two split() and a concat(). First, 
split the rope into three ropes divided by i-th and j-th character 
respectively,that is, first split S into S1 and S2 at i-th character, 
then split S1 into S3 and S4 at (j-i)-th character, then concatenate the
 S1 and S2. Because the split() and concat() both cost O(logN) time, the
 time complexity of this operation is also O(logN).</p>
<h3> <span class="mw-headline" id="Report">Report</span>
</h3>
<p>Definition: Report(i, j): output the string Ci, …, Ci+j-1.</p>
<p>To report the string Ci, …, Ci+j-1, we first search for the node u 
that contains ci and weight(u) &gt;=j, and then traverse T starting at 
node u. we can then output Ci, …, Ci+j-1 in O(j+logN) expected time by 
doing an in-order traversal of T starting at node u.</p>
</div><a id="anchor_2" href="#section_2" class="section_anchors back_to_top">↑Jump back a section</a></div><div class="section"><h2 class="section_heading" id="section_3"><button>Show</button><span id="Advantages_and_disadvantages">Advantages and disadvantages</span></h2><div class="content_block" id="content_3">
<p>Advantages:</p>
<ul>
<li>Ropes enable much faster insertion and deletion of text than ordinary strings.</li>
<li>Ropes don't need the extra O(n) memory that arrays need for copying 
operations, and ropes don't require a large contiguous memory space to 
store a string.</li>
</ul>
<p>Disadvantages:</p>
<ul>
<li>Slightly greater overall space usage (mainly to store the nodes that don't have strings)</li>
<li>Increase in time that the extra storage requires</li>
</ul>
</div><a id="anchor_3" href="#section_3" class="section_anchors back_to_top">↑Jump back a section</a></div><div class="section"><h2 class="section_heading" id="section_4"><button>Show</button><span id="Comparison_to_array-based_strings">Comparison to array-based strings</span></h2><div class="content_block" id="content_4">
<p>This table compares the <i>algorithmic</i> characteristics of string 
and rope implementations, not their "raw speed". Array-based strings 
have smaller overhead, so (for example) concatenation and split 
operations are faster on small datasets. However, when array-based 
strings are used for large sets of data, time complexity and memory 
usage for insertion and deletion of characters becomes unacceptably 
large. A rope data structure, on the other hand, has a stable 
performance regardless of data size. Moreover, the space complexity for 
ropes and arrays are both O(n). In summary, ropes are better suited when
 the data is large and frequently modified.</p>
<table class="wikitable">
<caption>Performance</caption>
<tbody><tr>
<th>Operation</th>
<th>Rope</th>
<th>String</th>
</tr>
<tr align="center">
<td>index</td>
<td style="background: none repeat scroll 0% 0% rgb(255, 255, 221); color: black; vertical-align: middle; text-align: center;" class="partial table-partial">O(log n)</td>
<td style="background: none repeat scroll 0% 0% rgb(144, 255, 144); color: black; vertical-align: middle; text-align: center;" class="table-yes">O(1)</td>
</tr>
<tr align="center">
<td>split</td>
<td style="background: none repeat scroll 0% 0% rgb(255, 255, 221); color: black; vertical-align: middle; text-align: center;" class="partial table-partial">O(log n)</td>
<td style="background: none repeat scroll 0% 0% rgb(144, 255, 144); color: black; vertical-align: middle; text-align: center;" class="table-yes">O(1)</td>
</tr>
<tr align="center">
<td>concatenate</td>
<td style="background: none repeat scroll 0% 0% rgb(144, 255, 144); color: black; vertical-align: middle; text-align: center;" class="table-yes">O(log n)</td>
<td style="background: none repeat scroll 0% 0% rgb(255, 144, 144); color: black; vertical-align: middle; text-align: center;" class="no table-no">O(n)</td>
</tr>
<tr align="center">
<td>insert</td>
<td style="background: none repeat scroll 0% 0% rgb(144, 255, 144); color: black; vertical-align: middle; text-align: center;" class="table-yes">O(log n)</td>
<td style="background: none repeat scroll 0% 0% rgb(255, 144, 144); color: black; vertical-align: middle; text-align: center;" class="no table-no">O(n)</td>
</tr>
<tr align="center">
<td>delete</td>
<td style="background: none repeat scroll 0% 0% rgb(144, 255, 144); color: black; vertical-align: middle; text-align: center;" class="table-yes">O(log n)</td>
<td style="background: none repeat scroll 0% 0% rgb(255, 144, 144); color: black; vertical-align: middle; text-align: center;" class="no table-no">O(n)</td>
</tr>
<tr align="center">
<td>report</td>
<td style="background: none repeat scroll 0% 0% rgb(255, 255, 221); color: black; vertical-align: middle; text-align: center;" class="partial table-partial">O(log n)</td>
<td style="background: none repeat scroll 0% 0% rgb(144, 255, 144); color: black; vertical-align: middle; text-align: center;" class="table-yes">O(1)</td>
</tr>
<tr align="center">
<td>build</td>
<td style="background: none repeat scroll 0% 0% rgb(144, 255, 144); color: black; vertical-align: middle; text-align: center;" class="table-yes">O(n)</td>
<td style="background: none repeat scroll 0% 0% rgb(144, 255, 144); color: black; vertical-align: middle; text-align: center;" class="table-yes">O(n)</td>
</tr>
</tbody></table>
<p><sup class="Template-Fact" style="white-space:nowrap;">[<i><a href="http://en.m.wikipedia.org/wiki/Wikipedia:Citation_needed" title="Wikipedia:Citation needed"><span title="This claim needs references to reliable sources from October 2010">citation needed</span></a></i>]</sup></p>
</div><a id="anchor_4" href="#section_4" class="section_anchors back_to_top">↑Jump back a section</a></div><div class="section"><h2 class="section_heading" id="section_5"><button>Show</button><span id="See_also">See also</span></h2><div class="content_block" id="content_5">
<ul>
<li>The <a href="http://en.m.wikipedia.org/wiki/Cedar_%28programming_language%29" title="Cedar (programming language)" class="mw-redirect">Cedar</a> programming environment, which used ropes "almost since its inception"<sup id="cite_ref-Boehm_0-1" class="reference"><a href="#cite_note-Boehm-0"><span>[</span>1<span>]</span></a></sup>
</li>
<li>The <a href="http://en.m.wikipedia.org/wiki/Enfilade_%28Xanadu%29" title="Enfilade (Xanadu)">Model T enfilade</a>, a similar data structure from the early 1970s.</li>
<li>
<a href="http://en.m.wikipedia.org/wiki/Gap_buffer" title="Gap buffer">Gap buffer</a>,
 a data structure commonly used in text editors that allows efficient 
insertion and deletion operations clustered near the same location</li>
</ul>
</div><a id="anchor_5" href="#section_5" class="section_anchors back_to_top">↑Jump back a section</a></div><div class="section"><h2 class="section_heading" id="section_6"><button>Show</button><span id="References">References</span></h2><div class="content_block" id="content_6">
<ol class="references">
<li id="cite_note-Boehm-0">
<span class="mw-cite-backlink">^ <a href="#cite_ref-Boehm_0-0"><sup><i><b>a</b></i></sup></a> <a href="#cite_ref-Boehm_0-1"><sup><i><b>b</b></i></sup></a></span> <span class="reference-text"><span class="citation Journal">Boehm, Hans-J; Atkinson, Russ; and Plass, Michael (December 1995). <a rel="nofollow" class="external text" href="http://citeseer.ist.psu.edu/viewdoc/download?doi=10.1.1.14.9450&amp;rep=rep1&amp;type=pdf">"Ropes: an Alternative to Strings"</a> (<a href="http://en.m.wikipedia.org/wiki/PDF" title="PDF" class="mw-redirect">PDF</a>). <i>Software—Practice &amp; Experience</i> (New York, NY, USA: John Wiley &amp; Sons, Inc.) <b>25</b> (12): 1315–1330. <a href="http://en.m.wikipedia.org/wiki/Digital_object_identifier" title="Digital object identifier">DOI</a>:<a rel="nofollow" class="external text" href="http://dx.doi.org/10.1002%2Fspe.4380251203">10.1002/spe.4380251203</a><span class="printonly">. <a rel="nofollow" class="external free" href="http://citeseer.ist.psu.edu/viewdoc/download?doi=10.1.1.14.9450&amp;rep=rep1&amp;type=pdf">http://citeseer.ist.psu.edu/viewdoc/download?doi=10.1.1.14.9450&amp;rep=rep1&amp;type=pdf</a></span>.</span><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=article&amp;rft.atitle=Ropes%3A+an+Alternative+to+Strings&amp;rft.jtitle=Software%E2%80%94Practice+%26+Experience&amp;rft.aulast=Boehm&amp;rft.aufirst=Hans-J&amp;rft.au=Boehm%2C%26%2332%3BHans-J&amp;rft.date=December+1995&amp;rft.volume=25&amp;rft.issue=12&amp;rft.pages=1315%E2%80%931330&amp;rft.place=New+York%2C+NY%2C+USA&amp;rft.pub=John+Wiley+%26+Sons%2C+Inc.&amp;rft_id=info:doi/10.1002%2Fspe.4380251203&amp;rft_id=http%3A%2F%2Fciteseer.ist.psu.edu%2Fviewdoc%2Fdownload%3Fdoi%3D10.1.1.14.9450%26rep%3Drep1%26type%3Dpdf&amp;rfr_id=info:sid/en.wikipedia.org:Rope_(computer_science)"><span style="display: none;">&nbsp;</span></span></span>
</li>
</ol>
</div><a id="anchor_6" href="#section_6" class="section_anchors back_to_top">↑Jump back a section</a></div><div class="section"><h2 class="section_heading" id="section_7"><button>Show</button><span id="External_links">External links</span></h2><div class="content_block" id="content_7">
<ul>
<li><a rel="nofollow" class="external text" href="http://www.sgi.com/tech/stl/Rope.html">SGI's implementation of ropes for C++</a></li>
<li><a rel="nofollow" class="external text" href="http://gcc.gnu.org/onlinedocs/libstdc++/libstdc++-html-USERS-4.3/a00223.html">libstdc++ support for ropes</a></li>
<li><a rel="nofollow" class="external text" href="http://ahmadsoft.org/ropes/">Ropes for Java</a></li>
<li>
<a rel="nofollow" class="external text" href="http://rope.forge.ocamlcore.org/doc/Rope.html">Ropes</a> for <a href="http://en.m.wikipedia.org/wiki/OCaml" title="OCaml">OCaml</a>
</li>
<li>
<a rel="nofollow" class="external text" href="https://github.com/Ramarren/ropes">ropes</a> for <a href="http://en.m.wikipedia.org/wiki/Common_Lisp" title="Common Lisp">Common Lisp</a>
</li>
</ul>

</div>
</div>		</div>
	</div>
			<div id="footer">
			<h2 class="section_heading" id="section_footer"><button>Show</button>
		<div class="license">Wikipedia ™</div>		<span class="toggleCopyright">
			<span class="more">more</span><span class="less">less</span>
		</span>
	</h2>
	<div class="content_block" id="content_footer">
		<ul class="settings">
			<li>
				<span class="left separator"><a id="mw-mf-display-toggle" href="http://en.wikipedia.org/w/index.php?title=Rope_%28computer_science%29&amp;mobileaction=toggle_view_desktop">Desktop</a></span><span class="right">Mobile</span>
			</li>
			<li>
				<span class="left"><a href="http://wikimediafoundation.org/wiki/Terms_of_use?useformat=mobile">Terms of Use</a></span><span class="right">Images ON / <a href="http://en.m.wikipedia.org/w/index.php?title=Special:MobileOptions/DisableImages&amp;returnto=Rope+%28computer+science%29&amp;mobiletoken=dc83e2c6ae93b1fadc6882196f529c1b" title="Special:MobileOptions/DisableImages" id="imagetoggle">OFF</a></span>
			</li>
			<li class="notice">
				Article by <a href="http://en.m.wikipedia.org/w/index.php?title=Rope_%28computer_science%29&amp;action=history">contributors</a> like you<br>
				Content available under <a href="http://en.m.wikipedia.org/wiki/Wikipedia:Text_of_Creative_Commons_Attribution-ShareAlike_3.0_Unported_License?useformat=mobile">CC BY-SA 3.0</a>			</li>
		</ul>
		<ul class="links">
			<li>
				<a href="http://en.m.wikipedia.org/w/index.php?title=Special:MobileFeedback&amp;returnto=Rope+%28computer+science%29&amp;feedbacksource=MobileFrontend">Contact</a>
			</li><li>
			<a href="http://wikimediafoundation.org/wiki/Privacy_policy" title="wikimedia:Privacy policy">Privacy</a></li><li>
			<a href="http://en.m.wikipedia.org/wiki/Wikipedia:About" title="Wikipedia:About">About</a></li><li>
			<a href="http://en.m.wikipedia.org/wiki/Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
		</ul>
	</div>
	</div>
				<!--[if gt IE 7]><!-->
		<script type="text/javascript">mw={loader:{state:function(){}}};</script>		<script src="Rope_%28computer_science%29_files/load_002.php" type="text/javascript"></script>
<script src="Rope_%28computer_science%29_files/load.php" type="text/javascript"></script>	<script type="text/javascript">
	window.onload = function() {
		mw.mobileFrontend.init();
	};
	</script>
	<!----><!--[endif]---->
	
	<div style="display: none;" id="mf-references"><div></div><button>close</button></div></body></html>