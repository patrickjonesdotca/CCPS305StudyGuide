<!DOCTYPE html>
<html class="jsEnabled togglingEnabled" dir="ltr" lang="en"><head>
		<title>Tarjan's strongly connected components algorithm - Wikipedia, the free encyclopedia</title>
		<meta http-equiv="content-type" content="text/html; charset=UTF-8">
		<meta name="robots" content="noindex,nofollow">		<link rel="stylesheet" href="Tarjan%27s_strongly_connected_components_algorithm_files/load.css" type="text/css" media="all">		<meta name="viewport" content="initial-scale=1.0, user-scalable=no">
		<link rel="apple-touch-icon" href="http://en.wikipedia.org/apple-touch-icon.png">		<script type="text/javascript">
			if( typeof mw === 'undefined' ) {
				mw = {};
			}
			var mwMobileFrontendConfig = {"messages":{"expand-section":"Show","collapse-section":"Hide","remove-results":"Back...","mobile-frontend-search-noresults":"No article titles match your search. Change your search, or press the keyboard search button to search inside articles.","mobile-frontend-search-help":"Type search term above and matching article titles will appear here.","contents-heading":"Contents","language-heading":"Read this article in","mobile-frontend-close-section":"Close this section","mobile-frontend-language-header":"This article is available in 6 languages","mobile-frontend-language-footer":"<a href=\"\/wiki\/Special:Special:MobileOptions\/Language\">Wikipedia is available in other languages.<\/a>","mobile-frontend-language-site-choose":"Search language","mobile-frontend-language-site-nomatches":"No matching languages"},"settings":{"scriptPath":"\/w","useFormatCookieName":"mf_mobileFormat","useFormatCookieDuration":-1,"useFormatCookieDomain":"en.wikipedia.org","useFormatCookiePath":"\/","stopMobileRedirectCookieName":"stopMobileRedirect","stopMobileRedirectCookieDuration":15552000,"stopMobileRedirectCookieDomain":".wikipedia.org","hookOptions":""}};
			document.documentElement.className = 'jsEnabled page-loading';		</script>
		<link rel="canonical" href="http://en.wikipedia.org/wiki/Tarjan%27s_strongly_connected_components_algorithm">
	</head>
	<body class="mobile mw-mf-checkboxes">
							<div id="mw-mf-header">
					<form id="mw-mf-searchForm" action="/w/index.php" class="search_bar" method="get">
							<img alt="Logo" id="mw-mf-logo" src="Tarjan%27s_strongly_connected_components_algorithm_files/W_logo_for_Mobile_Frontend.gif" width="35" height="22">
						<input value="Special:Search" name="title" type="hidden">
			<div id="mw-mf-sq" class="divclearable">
				<input name="search" id="mw-mf-search" size="22" autocomplete="off" maxlength="1024" class="search" placeholder="Type your search here..." type="search">
				<img src="Tarjan%27s_strongly_connected_components_algorithm_files/blank.gif" alt="Clear" class="clearlink" id="mw-mf-clearsearch" title="Clear">
			</div>
						<button id="goButton" class="goButton" type="submit">
				<img src="Tarjan%27s_strongly_connected_components_algorithm_files/blank.gif" alt="Go" title="Go">
			</button>
					</form>
									<div class="nav" id="nav">
				<div id="mw-mf-language-selection">
		Language:<br>
		<select id="languageselection"><option value="http://en.wikipedia.org/wiki/Tarjan%27s_strongly_connected_components_algorithm" selected="selected">English</option><option value="//de.m.wikipedia.org/wiki/Algorithmus_von_Tarjan_zur_Bestimmung_starker_Zusammenhangskomponenten">Deutsch</option><option value="//fr.m.wikipedia.org/wiki/Algorithme_de_Tarjan">français</option><option value="//it.m.wikipedia.org/wiki/Algoritmo_di_Tarjan_per_le_componenti_fortemente_connesse">italiano</option><option value="//ru.m.wikipedia.org/wiki/%D0%90%D0%BB%D0%B3%D0%BE%D1%80%D0%B8%D1%82%D0%BC_%D0%A2%D0%B0%D1%80%D1%8C%D1%8F%D0%BD%D0%B0">русский</option><option value="//zh.m.wikipedia.org/wiki/Tarjan%E7%AE%97%E6%B3%95">中文</option></select>
	</div><br>
			<a href="http://en.m.wikipedia.org/wiki/Main_Page" id="homeButton" class="button">Home</a>
			<a href="http://en.m.wikipedia.org/wiki/Special:Random" id="randomButton" class="button">Random</a>
			</div>
		</div>
				<div id="results"><ul class="suggestions-results" title="No Results"><li class="suggestions-result">Type search term above and matching article titles will appear here.</li></ul></div>
		<div class="show" id="content_wrapper">
				<div id="content">
			<h1 id="firstHeading">Tarjan's strongly connected components algorithm</h1>			
<p><b>Tarjan's Algorithm</b> (named for its discoverer, <a href="http://en.m.wikipedia.org/wiki/Robert_Tarjan" title="Robert Tarjan">Robert Tarjan</a><sup id="cite_ref-0" class="reference"><a href="#cite_note-0"><span>[</span>1<span>]</span></a></sup>) is a <a href="http://en.m.wikipedia.org/wiki/Graph_theory" title="Graph theory">graph theory</a> <a href="http://en.m.wikipedia.org/wiki/Algorithm" title="Algorithm">algorithm</a> for finding the <a href="http://en.m.wikipedia.org/wiki/Strongly_connected_components" title="Strongly connected components" class="mw-redirect">strongly connected components</a> of a <a href="http://en.m.wikipedia.org/wiki/Graph_%28data_structure%29" title="Graph (data structure)" class="mw-redirect">graph</a>. Although it precedes it chronologically, it can be seen as an improved version of <a href="http://en.m.wikipedia.org/wiki/Kosaraju%27s_algorithm" title="Kosaraju's algorithm">Kosaraju's algorithm</a>, and is comparable in efficiency to the <a href="http://en.m.wikipedia.org/wiki/Path-based_strong_component_algorithm" title="Path-based strong component algorithm">path-based strong component algorithm</a>.</p>
<div class="section"><h2 class="section_heading" id="section_1"><button>Show</button><span id="Overview">Overview</span></h2><div class="content_block" id="content_1">
<p>The algorithm takes a <a href="http://en.m.wikipedia.org/wiki/Directed_graph" title="Directed graph">directed graph</a> as input, and produces a <a href="http://en.m.wikipedia.org/wiki/Partition_of_a_set" title="Partition of a set">partition</a> of the graph's <a href="http://en.m.wikipedia.org/wiki/Vertex_%28graph_theory%29" title="Vertex (graph theory)">vertices</a>
 into the graph's strongly connected components. Every vertex of the 
graph appears in a single strongly connected component, even if it means
 a vertex appears in a strongly connected component by itself (as is the
 case with tree-like parts of the graph, as well as any vertex with no 
successor or no predecessor).</p>
<p>The basic idea of the algorithm is this: a <a href="http://en.m.wikipedia.org/wiki/Depth-first_search" title="Depth-first search">depth-first search</a>
 begins from an arbitrary start node (and subsequent depth-first 
searches are conducted on any nodes that have not yet been found). The 
search does not explore any node that has already been explored. The 
strongly connected components form the subtrees of the search tree, the 
roots of which are the roots of the strongly connected components.</p>
<p>The nodes are placed on a <a href="http://en.m.wikipedia.org/wiki/Stack_%28data_structure%29" title="Stack (data structure)" class="mw-redirect">stack</a>
 in the order in which they are visited. When the search returns from a 
subtree, the nodes are taken from the stack and it is determined whether
 each node is the root of a strongly connected component. If a node is 
the root of a strongly connected component, then it and all of the nodes
 taken off before it form that strongly connected component.</p>
<h3> <span class="mw-headline" id="The_root_property">The root property</span>
</h3>
<p>The crux of the algorithm comes in determining whether a node is the 
root of a strongly connected component. The concept of the "root" 
applies only to this algorithm (outside of the algorithm, a strongly 
connected component has no single "root" node). The root node is simply 
the first node of the strongly connected component which is encountered 
during the depth-first traversal. When a node is identified as the root 
node, once recursion on its successors has finished, all nodes on the 
stack from the root upwards form a complete strongly connected 
component.</p>
<p>To find the root, each node is given a depth search index <tt>v.index</tt>, which numbers the nodes consecutively in the order in which they are discovered. In addition, each node is assigned a value <tt>v.lowlink</tt> that is equal to the smallest index of some node reachable from <tt>v</tt>, and always less than <tt>v.index</tt>, or equal to <tt>v.index</tt> if no other node is reachable from <tt>v</tt>. Therefore <tt>v</tt> is the root of a strongly connected component if and only if <tt>v.lowlink == v.index</tt>. The value <tt>v.lowlink</tt> is computed during the depth first search such that it is always known when needed.</p>
</div><a id="anchor_1" href="#section_1" class="section_anchors back_to_top">↑Jump back a section</a></div><div class="section"><h2 class="section_heading" id="section_2"><button>Show</button><span id="The_algorithm_in_pseudocode">The algorithm in pseudocode</span></h2><div class="content_block" id="content_2">
<pre><b>algorithm</b> tarjan <b>is</b>
  <b>input:</b> graph <i>G</i> = (<i>V</i>, <i>E</i>)
  <b>output:</b> set of strongly connected components (sets of vertices)

  <i>index</i> := 0
  <i>S</i> := empty
  <b>for each</b> <i>v</i> <b>in</b> <i>V</i> <b>do</b>
    <b>if</b> (<i>v</i>.index is undefined) <b>then</b>
      strongconnect(<i>v</i>)
    <b>end if</b>
  <b>repeat</b>

  <b>function</b> strongconnect(<i>v</i>)
    <i>// Set the depth index for v to the smallest unused index</i>
    <i>v</i>.index := <i>index</i>
    <i>v</i>.lowlink := <i>index</i>
    <i>index</i> := <i>index</i> + 1
    <i>S</i>.push(<i>v</i>)

    <i>// Consider successors of v</i>
    <b>for each</b> (<i>v</i>, <i>w</i>) <b>in</b> <i>E</i> <b>do</b>
      <b>if</b> (<i>w</i>.index is undefined) <b>then</b>
        <i>// Successor w has not yet been visited; recurse on it</i>
        strongconnect(<i>w</i>)
        <i>v</i>.lowlink := min(<i>v</i>.lowlink, <i>w</i>.lowlink)
      <b>else if</b> (<i>w</i> is in <i>S</i>) <b>then</b>
        <i>// Successor w is in stack S and hence in the current SCC</i>
        <i>v</i>.lowlink := min(<i>v</i>.lowlink, <i>w</i>.index)
      <b>end if</b>
    <b>repeat</b>

    <i>// If v is a root node, pop the stack and generate an SCC</i>
    <b>if</b> (<i>v</i>.lowlink = <i>v</i>.index) <b>then</b>
      start a new strongly connected component
      <b>repeat</b>
        <i>w</i> := <i>S</i>.pop()
        add <i>w</i> to current strongly connected component
      <b>until</b> (<i>w</i> = <i>v</i>)
      output the current strongly connected component
    <b>end if</b>
  <b>end function</b>
</pre>
<p>The <tt>index</tt> variable is the depth-first search node number counter. <tt>S</tt>
 is the node stack, which starts out empty and stores the history of 
nodes explored but not yet committed to a strongly connected component. 
Note that this is not the normal depth-first search stack, as nodes are 
not popped as the search returns up the tree; they are only popped when 
an entire strongly connected component has been found.</p>
<p>The outermost loop searches each node that has not yet been visited, 
ensuring that nodes which are not reachable from the first node are 
still eventually traversed. The function <tt>strongconnect</tt> performs a single depth-first search of the graph, finding all successors from the node <tt>v</tt>, and reporting all strongly connected components of that subgraph.</p>
<p>When each node finishes recursing, if its lowlink is still set to its
 index, then it is the root node of a strongly connected component, 
formed by all of the nodes below it on the stack. The algorithm pops the
 stack up to and including the current node, and presents all of these 
nodes as a strongly connected component.</p>
</div><a id="anchor_2" href="#section_2" class="section_anchors back_to_top">↑Jump back a section</a></div><div class="section"><h2 class="section_heading" id="section_3"><button>Show</button><span id="Remarks">Remarks</span></h2><div class="content_block" id="content_3">
<ol>
<li>Complexity: The Tarjan procedure is called once for each node; the 
forall statement considers each edge at most twice. The algorithm's 
running time is therefore linear in the number of edges in G, i.e. <img class="tex" alt="O(|V|+|E|)" src="Tarjan%27s_strongly_connected_components_algorithm_files/4fe9f15fb53c589e023213ae35fcf78f.png">.</li>
<li>The test for whether v' is on the stack should be done in constant 
time, for example, by testing a flag stored on each node that indicates 
whether it is on the stack.</li>
<li>While there is nothing special about the order of the nodes within 
each strongly connected component, one useful property of the algorithm 
is that no strongly connected component will be identified before any of
 its successors. Therefore, the order in which the strongly connected 
components are identified constitutes a reverse <a href="http://en.m.wikipedia.org/wiki/Topological_sorting" title="Topological sorting">topological sort</a> of the <a href="http://en.m.wikipedia.org/wiki/Directed_acyclic_graph" title="Directed acyclic graph">DAG</a> formed by the strongly connected components.<sup id="cite_ref-1" class="reference"><a href="#cite_note-1"><span>[</span>2<span>]</span></a></sup>
</li>
</ol>
</div><a id="anchor_3" href="#section_3" class="section_anchors back_to_top">↑Jump back a section</a></div><div class="section"><h2 class="section_heading" id="section_4"><button>Show</button><span id="References">References</span></h2><div class="content_block" id="content_4">
<ol class="references">
<li id="cite_note-0">
<span class="mw-cite-backlink"><b><a href="#cite_ref-0">^</a></b></span> <span class="reference-text"><span class="citation" id="CITEREFTarjan1972"><a href="http://en.m.wikipedia.org/wiki/Robert_Tarjan" title="Robert Tarjan">Tarjan, R. E.</a> (1972), "Depth-first search and linear graph algorithms", <i><a href="http://en.m.wikipedia.org/wiki/SIAM_Journal_on_Computing" title="SIAM Journal on Computing">SIAM Journal on Computing</a></i> <b>1</b> (2): 146–160, <a href="http://en.m.wikipedia.org/wiki/Digital_object_identifier" title="Digital object identifier">DOI</a>:<a rel="nofollow" class="external text" href="http://dx.doi.org/10.1137%2F0201010">10.1137/0201010</a></span><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=article&amp;rft.atitle=Depth-first+search+and+linear+graph+algorithms&amp;rft.jtitle=%5B%5BSIAM+Journal+on+Computing%5D%5D&amp;rft.aulast=Tarjan&amp;rft.aufirst=R.+E.&amp;rft.au=Tarjan%2C%26%2332%3BR.+E.&amp;rft.date=1972&amp;rft.volume=1&amp;rft.issue=2&amp;rft.pages=146%E2%80%93160&amp;rft_id=info:doi/10.1137%2F0201010&amp;rfr_id=info:sid/en.wikipedia.org:Tarjan%27s_strongly_connected_components_algorithm"><span style="display: none;">&nbsp;</span></span></span>
</li>
<li id="cite_note-1">
<span class="mw-cite-backlink"><b><a href="#cite_ref-1">^</a></b></span> <span class="reference-text"><span class="citation web">Harrison, Paul. <a rel="nofollow" class="external text" href="http://www.logarithmic.net/pfh/blog/01208083168">"Robust topological sorting and Tarjan's algorithm in Python"</a><span class="printonly">. <a rel="nofollow" class="external free" href="http://www.logarithmic.net/pfh/blog/01208083168">http://www.logarithmic.net/pfh/blog/01208083168</a></span><span class="reference-accessdate">. Retrieved 9 February 2011</span>.</span><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=bookitem&amp;rft.btitle=Robust+topological+sorting+and+Tarjan%27s+algorithm+in+Python&amp;rft.atitle=&amp;rft.aulast=Harrison&amp;rft.aufirst=Paul&amp;rft.au=Harrison%2C%26%2332%3BPaul&amp;rft_id=http%3A%2F%2Fwww.logarithmic.net%2Fpfh%2Fblog%2F01208083168&amp;rfr_id=info:sid/en.wikipedia.org:Tarjan%27s_strongly_connected_components_algorithm"><span style="display: none;">&nbsp;</span></span></span>
</li>
</ol>
</div><a id="anchor_4" href="#section_4" class="section_anchors back_to_top">↑Jump back a section</a></div><div class="section"><h2 class="section_heading" id="section_5"><button>Show</button><span id="External_links">External links</span></h2><div class="content_block" id="content_5">
<ul>
<li><a rel="nofollow" class="external text" href="http://www.ics.uci.edu/%7Eeppstein/161/960220.html#sca">Description of Tarjan's Algorithm</a></li>
<li><a rel="nofollow" class="external text" href="http://stackoverflow.com/questions/6643076/tarjan-cycle-detection-help-c#sca">Implementation of Tarjan's Algorithm in .NET</a></li>
<li><a rel="nofollow" class="external text" href="http://algowiki.net/wiki/index.php?title=Tarjan%27s_algorithm">Implementation of Tarjan's Algorithm in Java</a></li>
<li><a rel="nofollow" class="external text" href="http://www.logarithmic.net/pfh/blog/01208083168">Implementation of Tarjan's Algorithm in Python</a></li>
<li><a rel="nofollow" class="external text" href="https://github.com/bwesterb/py-tarjan/">Another implementation of Tarjan's Algorithm in Python</a></li>
<li><a rel="nofollow" class="external text" href="https://gist.github.com/1440602">Implementation of Tarjan's Algorithm in Javascript</a></li>
</ul>

</div>
</div>		</div>
	</div>
			<div id="footer">
			<h2 class="section_heading" id="section_footer"><button>Show</button>
		<div class="license">Wikipedia ™</div>		<span class="toggleCopyright">
			<span class="more">more</span><span class="less">less</span>
		</span>
	</h2>
	<div class="content_block" id="content_footer">
		<ul class="settings">
			<li>
				<span class="left separator"><a id="mw-mf-display-toggle" href="http://en.wikipedia.org/w/index.php?title=Tarjan%27s_strongly_connected_components_algorithm&amp;mobileaction=toggle_view_desktop">Desktop</a></span><span class="right">Mobile</span>
			</li>
			<li>
				<span class="left"><a href="http://wikimediafoundation.org/wiki/Terms_of_use?useformat=mobile">Terms of Use</a></span><span class="right">Images ON / <a href="http://en.m.wikipedia.org/w/index.php?title=Special:MobileOptions/DisableImages&amp;returnto=Tarjan%27s+strongly+connected+components+algorithm&amp;mobiletoken=5c89e355d2af09275b3b2ed3653e1683" title="Special:MobileOptions/DisableImages" id="imagetoggle">OFF</a></span>
			</li>
			<li class="notice">
				Article by <a href="http://en.m.wikipedia.org/w/index.php?title=Tarjan%27s_strongly_connected_components_algorithm&amp;action=history">contributors</a> like you<br>
				Content available under <a href="http://en.m.wikipedia.org/wiki/Wikipedia:Text_of_Creative_Commons_Attribution-ShareAlike_3.0_Unported_License?useformat=mobile">CC BY-SA 3.0</a>			</li>
		</ul>
		<ul class="links">
			<li>
				<a href="http://en.m.wikipedia.org/w/index.php?title=Special:MobileFeedback&amp;returnto=Tarjan%27s+strongly+connected+components+algorithm&amp;feedbacksource=MobileFrontend">Contact</a>
			</li><li>
			<a href="http://wikimediafoundation.org/wiki/Privacy_policy" title="wikimedia:Privacy policy">Privacy</a></li><li>
			<a href="http://en.m.wikipedia.org/wiki/Wikipedia:About" title="Wikipedia:About">About</a></li><li>
			<a href="http://en.m.wikipedia.org/wiki/Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
		</ul>
	</div>
	</div>
				<!--[if gt IE 7]><!-->
		<script type="text/javascript">mw={loader:{state:function(){}}};</script>		<script src="Tarjan%27s_strongly_connected_components_algorithm_files/load_002.php" type="text/javascript"></script>
<script src="Tarjan%27s_strongly_connected_components_algorithm_files/load.php" type="text/javascript"></script>	<script type="text/javascript">
	window.onload = function() {
		mw.mobileFrontend.init();
	};
	</script>
	<!----><!--[endif]---->
	
	<div style="display: none;" id="mf-references"><div></div><button>close</button></div></body></html>