<!DOCTYPE html>
<html class="jsEnabled togglingEnabled" dir="ltr" lang="en"><head>
		<title>Insertion sort - Wikipedia, the free encyclopedia</title>
		<meta http-equiv="content-type" content="text/html; charset=UTF-8">
		<meta name="robots" content="noindex,nofollow">		<link rel="stylesheet" href="Insertion_sort_files/load.css" type="text/css" media="all">		<meta name="viewport" content="initial-scale=1.0, user-scalable=no">
		<link rel="apple-touch-icon" href="http://en.wikipedia.org/apple-touch-icon.png">		<script type="text/javascript">
			if( typeof mw === 'undefined' ) {
				mw = {};
			}
			var mwMobileFrontendConfig = {"messages":{"expand-section":"Show","collapse-section":"Hide","remove-results":"Back...","mobile-frontend-search-noresults":"No article titles match your search. Change your search, or press the keyboard search button to search inside articles.","mobile-frontend-search-help":"Type search term above and matching article titles will appear here.","contents-heading":"Contents","language-heading":"Read this article in","mobile-frontend-close-section":"Close this section","mobile-frontend-language-header":"This article is available in 33 languages","mobile-frontend-language-footer":"<a href=\"\/wiki\/Special:Special:MobileOptions\/Language\">Wikipedia is available in other languages.<\/a>","mobile-frontend-language-site-choose":"Search language","mobile-frontend-language-site-nomatches":"No matching languages"},"settings":{"scriptPath":"\/w","useFormatCookieName":"mf_mobileFormat","useFormatCookieDuration":-1,"useFormatCookieDomain":"en.wikipedia.org","useFormatCookiePath":"\/","stopMobileRedirectCookieName":"stopMobileRedirect","stopMobileRedirectCookieDuration":15552000,"stopMobileRedirectCookieDomain":".wikipedia.org","hookOptions":""}};
			document.documentElement.className = 'jsEnabled page-loading';		</script>
		<link rel="canonical" href="http://en.wikipedia.org/wiki/Insertion_sort">
	</head>
	<body class="mobile mw-mf-checkboxes">
							<div id="mw-mf-header">
					<form id="mw-mf-searchForm" action="/w/index.php" class="search_bar" method="get">
							<img alt="Logo" id="mw-mf-logo" src="Insertion_sort_files/W_logo_for_Mobile_Frontend.gif" width="35" height="22">
						<input value="Special:Search" name="title" type="hidden">
			<div id="mw-mf-sq" class="divclearable">
				<input name="search" id="mw-mf-search" size="22" autocomplete="off" maxlength="1024" class="search" placeholder="Type your search here..." type="search">
				<img src="Insertion_sort_files/blank.gif" alt="Clear" class="clearlink" id="mw-mf-clearsearch" title="Clear">
			</div>
						<button id="goButton" class="goButton" type="submit">
				<img src="Insertion_sort_files/blank.gif" alt="Go" title="Go">
			</button>
					</form>
									<div class="nav" id="nav">
				<div id="mw-mf-language-selection">
		Language:<br>
		<select id="languageselection"><option value="http://en.wikipedia.org/wiki/Insertion_sort" selected="selected">English</option><option value="//ar.m.wikipedia.org/wiki/%D8%AA%D8%B1%D8%AA%D9%8A%D8%A8_%D8%A8%D8%A7%D9%84%D8%A5%D8%AF%D8%B1%D8%A7%D8%AC">العربية</option><option value="//bg.m.wikipedia.org/wiki/%D0%A1%D0%BE%D1%80%D1%82%D0%B8%D1%80%D0%B0%D0%BD%D0%B5_%D1%87%D1%80%D0%B5%D0%B7_%D0%B2%D0%BC%D1%8A%D0%BA%D0%B2%D0%B0%D0%BD%D0%B5">български</option><option value="//cs.m.wikipedia.org/wiki/Insertion_sort">česky</option><option value="//da.m.wikipedia.org/wiki/Inds%C3%A6ttelsessortering">dansk</option><option value="//de.m.wikipedia.org/wiki/Insertionsort">Deutsch</option><option value="//et.m.wikipedia.org/wiki/Vahelepanemisega_sortimine">eesti</option><option value="//es.m.wikipedia.org/wiki/Ordenamiento_por_inserci%C3%B3n">español</option><option value="//fa.m.wikipedia.org/wiki/%D9%85%D8%B1%D8%AA%D8%A8%E2%80%8C%D8%B3%D8%A7%D8%B2%DB%8C_%D8%AF%D8%B1%D8%AC%DB%8C">فارسی</option><option value="//fr.m.wikipedia.org/wiki/Tri_par_insertion">français</option><option value="//ko.m.wikipedia.org/wiki/%EC%82%BD%EC%9E%85_%EC%A0%95%EB%A0%AC">한국어</option><option value="//hy.m.wikipedia.org/wiki/%D5%86%D5%A5%D6%80%D5%A4%D6%80%D5%B4%D5%A1%D5%B4%D5%A2_%D5%BF%D5%A5%D5%BD%D5%A1%D5%AF%D5%A1%D5%BE%D5%B8%D6%80%D5%B8%D6%82%D5%B4">Հայերեն</option><option value="//is.m.wikipedia.org/wiki/Innsetningarr%C3%B6%C3%B0un">íslenska</option><option value="//it.m.wikipedia.org/wiki/Insertion_sort">italiano</option><option value="//he.m.wikipedia.org/wiki/%D7%9E%D7%99%D7%95%D7%9F_%D7%94%D7%9B%D7%A0%D7%A1%D7%94">עברית</option><option value="//lt.m.wikipedia.org/wiki/%C4%AEterpimo_rikiavimo_algoritmas">lietuvių</option><option value="//hu.m.wikipedia.org/wiki/Besz%C3%BAr%C3%A1sos_rendez%C3%A9s">magyar</option><option value="//ml.m.wikipedia.org/wiki/%E0%B4%87%E0%B5%BB%E0%B4%B8%E0%B5%BC%E0%B4%B7%E0%B5%BB_%E0%B4%B8%E0%B5%8B%E0%B5%BC%E0%B4%9F%E0%B5%8D%E0%B4%9F%E0%B5%8D">മലയാളം</option><option value="//nl.m.wikipedia.org/wiki/Insertion_sort">Nederlands</option><option value="//ja.m.wikipedia.org/wiki/%E6%8C%BF%E5%85%A5%E3%82%BD%E3%83%BC%E3%83%88">日本語</option><option value="//no.m.wikipedia.org/wiki/Sorteringsalgoritme#Innstikksortering">‪norsk (bokmål)‬</option><option value="//pl.m.wikipedia.org/wiki/Sortowanie_przez_wstawianie">polski</option><option value="//pt.m.wikipedia.org/wiki/Insertion_sort">português</option><option value="//ru.m.wikipedia.org/wiki/%D0%A1%D0%BE%D1%80%D1%82%D0%B8%D1%80%D0%BE%D0%B2%D0%BA%D0%B0_%D0%B2%D1%81%D1%82%D0%B0%D0%B2%D0%BA%D0%B0%D0%BC%D0%B8">русский</option><option value="//sk.m.wikipedia.org/wiki/Triedenie_priamym_vkladan%C3%ADm">slovenčina</option><option value="//sl.m.wikipedia.org/wiki/Urejanje_z_navadnim_vstavljanjem">slovenščina</option><option value="//fi.m.wikipedia.org/wiki/Lis%C3%A4yslajittelu">suomi</option><option value="//sv.m.wikipedia.org/wiki/Ins%C3%A4ttningssortering">svenska</option><option value="//th.m.wikipedia.org/wiki/%E0%B8%81%E0%B8%B2%E0%B8%A3%E0%B9%80%E0%B8%A3%E0%B8%B5%E0%B8%A2%E0%B8%87%E0%B8%A5%E0%B8%B3%E0%B8%94%E0%B8%B1%E0%B8%9A%E0%B9%81%E0%B8%9A%E0%B8%9A%E0%B9%81%E0%B8%97%E0%B8%A3%E0%B8%81">ไทย</option><option value="//tr.m.wikipedia.org/wiki/Eklemeli_s%C4%B1ralama">Türkçe</option><option value="//uk.m.wikipedia.org/wiki/%D0%A1%D0%BE%D1%80%D1%82%D1%83%D0%B2%D0%B0%D0%BD%D0%BD%D1%8F_%D0%B2%D0%BA%D0%BB%D1%8E%D1%87%D0%B5%D0%BD%D0%BD%D1%8F%D0%BC">українська</option><option value="//vi.m.wikipedia.org/wiki/S%E1%BA%AFp_x%E1%BA%BFp_ch%C3%A8n">Tiếng Việt</option><option value="//zh.m.wikipedia.org/wiki/%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F">中文</option></select>
	</div><br>
			<a href="http://en.m.wikipedia.org/wiki/Main_Page" id="homeButton" class="button">Home</a>
			<a href="http://en.m.wikipedia.org/wiki/Special:Random" id="randomButton" class="button">Random</a>
			</div>
		</div>
				<div id="results"><ul class="suggestions-results" title="No Results"><li class="suggestions-result">Type search term above and matching article titles will appear here.</li></ul></div>
		<div class="show" id="content_wrapper">
				<div id="content">
			<h1 id="firstHeading">Insertion sort</h1>			
<table class="infobox" style="width: 22em;" cellspacing="5">
<caption class="" style="">Insertion sort</caption>
<tbody><tr class="">
<td colspan="2" class="" style="text-align: center;">
<div class="floatnone"><a href="http://en.m.wikipedia.org/wiki/File:Insertionsort-edited.png" class="image" title="Example of insertion sort sorting a list of random numbers."><img alt="Example of insertion sort sorting a list of random numbers." src="Insertion_sort_files/Insertionsort-edited.png" width="280" height="250"></a></div>
<br><span style="">Example of insertion sort sorting a list of numbers.</span>
</td>
</tr>
<tr class="">
<th scope="row" style="text-align: left;">Class</th>
<td class="" style=""><a href="http://en.m.wikipedia.org/wiki/Sorting_algorithm" title="Sorting algorithm">Sorting algorithm</a></td>
</tr>
<tr class="">
<th scope="row" style="text-align: left;">Data structure</th>
<td class="" style=""><a href="http://en.m.wikipedia.org/wiki/Array_data_structure" title="Array data structure">Array</a></td>
</tr>
<tr class="">
<th scope="row" style="text-align: left;"><a href="http://en.m.wikipedia.org/wiki/Best,_worst_and_average_case" title="Best, worst and average case">Worst case performance</a></th>
<td class="" style="">О(<i>n</i><sup>2</sup>)</td>
</tr>
<tr class="">
<th scope="row" style="text-align: left;"><a href="http://en.m.wikipedia.org/wiki/Best,_worst_and_average_case" title="Best, worst and average case">Best case performance</a></th>
<td class="" style="">O(<i>n</i>)</td>
</tr>
<tr class="">
<th scope="row" style="text-align: left;"><a href="http://en.m.wikipedia.org/wiki/Best,_worst_and_average_case" title="Best, worst and average case">Average case performance</a></th>
<td class="" style="">О(<i>n</i><sup>2</sup>)</td>
</tr>
<tr class="">
<th scope="row" style="text-align: left;"><a href="http://en.m.wikipedia.org/wiki/Best,_worst_and_average_case" title="Best, worst and average case">Worst case space complexity</a></th>
<td class="" style="">О(<i>n</i>) total, O(<i>1</i>) auxiliary</td>
</tr>
</tbody></table>
<p><b>Insertion sort</b> is a simple <a href="http://en.m.wikipedia.org/wiki/Sorting_algorithm" title="Sorting algorithm">sorting algorithm</a> that builds the final <a href="http://en.m.wikipedia.org/wiki/Sorted_array" title="Sorted array">sorted array</a> (or list) one item at a time. It is much less efficient on large lists than more advanced algorithms such as <a href="http://en.m.wikipedia.org/wiki/Quicksort" title="Quicksort">quicksort</a>, <a href="http://en.m.wikipedia.org/wiki/Heapsort" title="Heapsort">heapsort</a>, or <a href="http://en.m.wikipedia.org/wiki/Merge_sort" title="Merge sort">merge sort</a>. However, insertion sort provides several advantages:</p>
<ul>
<li>Simple implementation</li>
<li>Efficient for (quite) small data sets</li>
<li>
<a href="http://en.m.wikipedia.org/wiki/Adaptive_sort" title="Adaptive sort">Adaptive</a> (i.e., efficient) for data sets that are already substantially sorted: the <a href="http://en.m.wikipedia.org/wiki/Time_complexity" title="Time complexity">time complexity</a> is O(<i>n</i> + <i>d</i>), where <i>d</i> is the number of <a href="http://en.m.wikipedia.org/wiki/Inversion_%28discrete_mathematics%29" title="Inversion (discrete mathematics)">inversions</a>
</li>
<li>More efficient in practice than most other simple quadratic (i.e., <a href="http://en.m.wikipedia.org/wiki/Big_O_notation" title="Big O notation">O</a>(<i>n</i><sup>2</sup>)) algorithms such as <a href="http://en.m.wikipedia.org/wiki/Selection_sort" title="Selection sort">selection sort</a> or <a href="http://en.m.wikipedia.org/wiki/Bubble_sort" title="Bubble sort">bubble sort</a>; the best case (nearly sorted input) is <a href="http://en.m.wikipedia.org/wiki/Big_O_notation" title="Big O notation">O</a>(<i>n</i>)</li>
<li>
<a href="http://en.m.wikipedia.org/wiki/Stable_sort" title="Stable sort" class="mw-redirect">Stable</a>; i.e., does not change the relative order of elements with equal keys</li>
<li>
<a href="http://en.m.wikipedia.org/wiki/In-place_algorithm" title="In-place algorithm">In-place</a>; i.e., only requires a constant amount O(1) of additional memory space</li>
<li>
<a href="http://en.m.wikipedia.org/wiki/Online_algorithm" title="Online algorithm">Online</a>;
 i.e., can sort a list as it receives it but for the same work the 
selection sort needs more time which makes it less efficient.</li>
</ul>
<p>When humans manually sort something (for example, a deck of playing cards), most use a method that is similar to insertion sort.<sup id="cite_ref-0" class="reference"><a href="#cite_note-0"><span>[</span>1<span>]</span></a></sup></p>
<div class="section"><h2 class="section_heading" id="section_1"><button>Show</button><span id="Algorithm">Algorithm</span></h2><div class="content_block" id="content_1">
<div class="thumb tright">
<div class="thumbinner" style="width:302px;">
<a href="http://en.m.wikipedia.org/wiki/File:Insertion-sort-example-300px.gif" class="image"><img alt="" src="Insertion_sort_files/Insertion-sort-example-300px.gif" class="thumbimage" width="300" height="180"></a>
<div class="thumbcaption">

An example of insertion sort. Check each element and put it in the right place in the sorted list.</div>
</div>
</div>
<p>Every repetition of insertion sort removes an element from the input 
data, inserting it into the correct position in the already-sorted list,
 until no input elements remain. The choice of which element to remove 
from the input is arbitrary, and can be made using almost any choice 
algorithm.</p>
<p>Sorting is typically done in-place. The resulting array after <i>k</i> iterations has the property where the first <i>k</i>
 + 1 entries are sorted. In each iteration the first remaining entry of 
the input is removed, inserted into the result at the correct position, 
thus extending the result:</p>
<p><a href="http://en.m.wikipedia.org/wiki/File:Insertionsort-before.png" class="image" title="Array prior to the insertion of x"><img alt="Array prior to the insertion of x" src="Insertion_sort_files/Insertionsort-before.png" width="299" height="54"></a></p>
<p>becomes</p>
<p><a href="http://en.m.wikipedia.org/wiki/File:Insertionsort-after.png" class="image" title="Array after the insertion of x"><img alt="Array after the insertion of x" src="Insertion_sort_files/Insertionsort-after.png" width="299" height="54"></a></p>
<p>with each element greater than <i>x</i> copied to the right as it is compared against <i>x</i>.</p>
<p>The most common variant of insertion sort, which operates on arrays, can be described as follows:</p>
<ol>
<li>Suppose there exists a function called <i>Insert</i> designed to 
insert a value into a sorted sequence at the beginning of an array. It 
operates by beginning at the end of the sequence and shifting each 
element one place to the right until a suitable position is found for 
the new element. The function has the side effect of overwriting the 
value stored immediately after the sorted sequence in the array.</li>
<li>To perform an insertion sort, begin at the left-most element of the array and invoke <i>Insert</i>
 to insert each element encountered into its correct position. The 
ordered sequence into which the element is inserted is stored at the 
beginning of the array in the set of indices already examined. Each 
insertion overwrites a single value: the value being inserted.</li>
</ol>
<p><a href="http://en.m.wikipedia.org/wiki/Pseudocode" title="Pseudocode">Pseudocode</a> of the complete algorithm follows, where the arrays are <a href="http://en.m.wikipedia.org/wiki/Zero-based_numbering" title="Zero-based numbering">zero-based</a>:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="c source-c">
<pre class="de1"> <span class="kw1">for</span> i ← <span class="nu0">1</span> to i ← length<span class="br0">(</span>A<span class="br0">)</span><span class="sy0">-</span><span class="nu0">1</span>
   <span class="br0">{</span>
     <span class="co1">// A[ i ] is added in the sorted sequence A[0, .. i-1]</span>
     <span class="co1">// save A[i] to make a hole at index iHole</span>
     item ← A<span class="br0">[</span>i<span class="br0">]</span>
     iHole ← i
     <span class="co1">// keep moving the hole to next smaller index until A[iHole - 1] is &lt;= item</span>
     <span class="kw1">while</span> iHole <span class="sy0">&gt;</span> <span class="nu0">0</span> and A<span class="br0">[</span>iHole <span class="sy0">-</span> <span class="nu0">1</span><span class="br0">]</span> <span class="sy0">&gt;</span> item
       <span class="br0">{</span>
         <span class="co1">// move hole to next smaller index</span>
         A<span class="br0">[</span>iHole<span class="br0">]</span> ← A<span class="br0">[</span>iHole <span class="sy0">-</span> <span class="nu0">1</span><span class="br0">]</span>
         iHole ← iHole <span class="sy0">-</span> <span class="nu0">1</span>
       <span class="br0">}</span>
     <span class="co1">// put item in the hole</span>
     A<span class="br0">[</span>iHole<span class="br0">]</span> ← item
   <span class="br0">}</span>
</pre>
</div>
</div>
</div><a id="anchor_1" href="#section_1" class="section_anchors back_to_top">↑Jump back a section</a></div><div class="section"><h2 class="section_heading" id="section_2"><button>Show</button><span id="Best.2C_worst.2C_and_average_cases">Best, worst, and average cases</span></h2><div class="content_block" id="content_2">
<div class="thumb tright">
<div class="thumbinner" style="width:183px;">
<a href="http://en.m.wikipedia.org/wiki/File:Insertion_sort.gif" class="image"><img alt="" src="Insertion_sort_files/Insertion_sort.gif" class="thumbimage" width="181" height="290"></a>
<div class="thumbcaption">

Animation of the insertion sort sorting a 30 element array.</div>
</div>
</div>
<p>The best case input is an array that is already sorted. In this case insertion sort has a linear running time (i.e., <a href="http://en.m.wikipedia.org/wiki/Big_Theta_notation" title="Big Theta notation" class="mw-redirect">Θ</a>(<i>n</i>)).
 During each iteration, the first remaining element of the input is only
 compared with the right-most element of the sorted subsection of the 
array.</p>
<p>The simplest worst case input is an array sorted in reverse order. 
The set of all worst case inputs consists of all arrays where each 
element is the smallest or second-smallest of the elements before it. In
 these cases every iteration of the inner loop will scan and shift the 
entire sorted subsection of the array before inserting the next element.
 This gives insertion sort a quadratic running time (i.e., O(<i>n</i><sup>2</sup>)).</p>
<p>The average case is also quadratic, which makes insertion sort 
impractical for sorting large arrays. However, insertion sort is one of 
the fastest algorithms for sorting very small arrays, even faster than <a href="http://en.m.wikipedia.org/wiki/Quicksort" title="Quicksort">quicksort</a>; indeed, good <a href="http://en.m.wikipedia.org/wiki/Quicksort" title="Quicksort">quicksort</a>
 implementations use insertion sort for arrays smaller than a certain 
threshold, also when arising as subproblems; the exact threshold must be
 determined experimentally and depends on the machine, but is commonly 
around ten.</p>
<p>Example: The following table shows the steps for sorting the sequence
 {3, 7, 4, 9, 5, 2, 6, 1}. In each step the item under consideration is 
underlined and the item moved (or held in place if was biggest yet 
considered) in the previous step is shown in bold.</p>
<p><u>3</u> 7 4 9 5 2 6 1</p>
<p><b>3</b> <u>7</u> 4 9 5 2 6 1</p>
<p>3 <b>7</b> <u>4</u> 9 5 2 6 1</p>
<p>3 <b>4</b> 7 <u>9</u> 5 2 6 1</p>
<p>3 4 7 <b>9</b> <u>5</u> 2 6 1</p>
<p>3 4 <b>5</b> 7 9 <u>2</u> 6 1</p>
<p><b>2</b> 3 4 5 7 9 <u>6</u> 1</p>
<p>2 3 4 5 <b>6</b> 7 9 <u>1</u></p>
<p><b>1</b> 2 3 4 5 6 7 9</p>
</div><a id="anchor_2" href="#section_2" class="section_anchors back_to_top">↑Jump back a section</a></div><div class="section"><h2 class="section_heading" id="section_3"><button>Show</button><span id="Comparisons_to_other_sorting_algorithms">Comparisons to other sorting algorithms</span></h2><div class="content_block" id="content_3">
<p>Insertion sort is very similar to <a href="http://en.m.wikipedia.org/wiki/Selection_sort" title="Selection sort">selection sort</a>. As in selection sort, after <i>k</i> passes through the array, the first <i>k</i> elements are in sorted order. For selection sort these are the <i>k</i> smallest elements, while in insertion sort they are whatever the first <i>k</i>
 elements were in the unsorted array. Insertion sort's advantage is that
 it only scans as many elements as needed to determine the correct 
location of the <i>k</i>+1st element, while selection sort must scan all remaining elements to find the absolute smallest element.</p>
<p>Calculations show that insertion sort will usually perform about half as many comparisons as selection sort. Assuming the <i>k</i>+1st element's rank is random, insertion sort will on average require shifting half of the previous <i>k</i>
 elements, while selection sort always requires scanning all unplaced 
elements. If the input array is reverse-sorted, insertion sort performs 
as many comparisons as selection sort. If the input array is already 
sorted, insertion sort performs as few as <i>n</i>-1 comparisons, thus making insertion sort more efficient when given sorted or "nearly sorted" arrays.</p>
<p>While insertion sort typically makes fewer comparisons than <a href="http://en.m.wikipedia.org/wiki/Selection_sort" title="Selection sort">selection sort</a>,
 it requires more writes because the inner loop can require shifting 
large sections of the sorted portion of the array. In general, insertion
 sort will write to the array O(<i>n</i><sup>2</sup>) times, whereas selection sort will write only O(<i>n</i>)
 times. For this reason selection sort may be preferable in cases where 
writing to memory is significantly more expensive than reading, such as 
with <a href="http://en.m.wikipedia.org/wiki/EEPROM" title="EEPROM">EEPROM</a> or <a href="http://en.m.wikipedia.org/wiki/Flash_memory" title="Flash memory">flash memory</a>.</p>
<p>Some <a href="http://en.m.wikipedia.org/wiki/Divide-and-conquer_algorithm" title="Divide-and-conquer algorithm" class="mw-redirect">divide-and-conquer algorithms</a> such as <a href="http://en.m.wikipedia.org/wiki/Quicksort" title="Quicksort">quicksort</a> and <a href="http://en.m.wikipedia.org/wiki/Mergesort" title="Mergesort" class="mw-redirect">mergesort</a>
 sort by recursively dividing the list into smaller sublists which are 
then sorted. A useful optimization in practice for these algorithms is 
to use insertion sort for sorting small sublists, where insertion sort 
outperforms these more complex algorithms. The size of list for which 
insertion sort has the advantage varies by environment and 
implementation, but is typically between eight and twenty elements.</p>
</div><a id="anchor_3" href="#section_3" class="section_anchors back_to_top">↑Jump back a section</a></div><div class="section"><h2 class="section_heading" id="section_4"><button>Show</button><span id="Variants">Variants</span></h2><div class="content_block" id="content_4">
<p><a href="http://en.m.wikipedia.org/wiki/Donald_Shell" title="Donald Shell">D.L. Shell</a> made substantial improvements to the algorithm; the modified version is called <a href="http://en.m.wikipedia.org/wiki/Shell_sort" title="Shell sort" class="mw-redirect">Shell sort</a>.
 The sorting algorithm compares elements separated by a distance that 
decreases on each pass. Shell sort has distinctly improved running times
 in practical work, with two simple variants requiring O(<i>n</i><sup>3/2</sup>) and O(<i>n</i><sup>4/3</sup>) running time.</p>
<p>If the cost of comparisons exceeds the cost of swaps, as is the case 
for example with string keys stored by reference or with human 
interaction (such as choosing one of a pair displayed side-by-side), 
then using <i>binary insertion sort</i> may yield better performance. Binary insertion sort employs a <a href="http://en.m.wikipedia.org/wiki/Binary_search_algorithm" title="Binary search algorithm">binary search</a> to determine the correct location to insert new elements, and therefore performs ⌈log<sub>2</sub>(<i>n</i>)⌉ comparisons in the worst case, which is O(<i>n</i> log <i>n</i>). The algorithm as a whole still has a running time of O(<i>n</i><sup>2</sup>) on average because of the series of swaps required for each insertion.</p>
<p>The number of swaps can be reduced by calculating the position of 
multiple elements before moving them. For example, if the target 
position of two elements is calculated before they are moved into the 
right position, the number of swaps can be reduced by about 25% for 
random data. In the extreme case, this variant works similar to <a href="http://en.m.wikipedia.org/wiki/Merge_sort" title="Merge sort">merge sort</a>.</p>
<p>To avoid having to make a series of swaps for each insertion, the input could be stored in a <a href="http://en.m.wikipedia.org/wiki/Linked_list" title="Linked list">linked list</a>,
 which allows elements to be spliced into or out of the list in 
constant-time when the position in the list is known. However, searching
 a linked list requires sequentially following the links to the desired 
position: a linked list does not have random access, so it cannot use a 
faster method such as binary search. Therefore, the running time 
required for searching is O(<i>n</i>) and the time for sorting is O(<i>n</i><sup>2</sup>). If a more sophisticated <a href="http://en.m.wikipedia.org/wiki/Data_structure" title="Data structure">data structure</a> (e.g., <a href="http://en.m.wikipedia.org/wiki/Heap_%28data_structure%29" title="Heap (data structure)">heap</a> or <a href="http://en.m.wikipedia.org/wiki/Binary_tree" title="Binary tree">binary tree</a>) is used, the time required for searching and insertion can be reduced significantly; this is the essence of <a href="http://en.m.wikipedia.org/wiki/Heap_sort" title="Heap sort" class="mw-redirect">heap sort</a> and <a href="http://en.m.wikipedia.org/wiki/Binary_tree_sort" title="Binary tree sort" class="mw-redirect">binary tree sort</a>.</p>
<p>In 2004 Bender, Farach-Colton, and Mosteiro published a new variant of insertion sort called <i><a href="http://en.m.wikipedia.org/wiki/Library_sort" title="Library sort">library sort</a></i> or <i>gapped insertion sort</i>
 that leaves a small number of unused spaces (i.e., "gaps") spread 
throughout the array. The benefit is that insertions need only shift 
elements over until a gap is reached. The authors show that this sorting
 algorithm runs with high probability in O(<i>n</i> log <i>n</i>) time.<sup id="cite_ref-1" class="reference"><a href="#cite_note-1"><span>[</span>2<span>]</span></a></sup></p>
<p>If a <a href="http://en.m.wikipedia.org/wiki/Skip_list" title="Skip list">skip list</a> is used, the insertion time is brought down to O(log <i>n</i>),
 and swaps are not needed because the skip list is implemented on a 
linked list structure. The final running time for insertion would be O(<i>n</i> log <i>n</i>).</p>
<p><i>List insertion sort</i> is a variant of insertion sort. It reduces the number of movements.<sup class="Template-Fact" style="white-space:nowrap;">[<i><a href="http://en.m.wikipedia.org/wiki/Wikipedia:Citation_needed" title="Wikipedia:Citation needed"><span title="This claim needs references to reliable sources from September 2011">citation needed</span></a></i>]</sup></p>
<h3> <span class="mw-headline" id="List_insertion_sort_code_in_C">List insertion sort code in C</span>
</h3>
<p>If the items are stored in a linked list, then the list can be sorted
 with O(1) additional space. The algorithm starts with an initially 
empty (and therefore trivially sorted) list. The input items are taken 
off the list one at a time, and then inserted in the proper place in the
 sorted list. When the input list is empty, the sorted list has the 
desired result.</p>
<p>The algorithm below uses a trailing pointer<sup id="cite_ref-2" class="reference"><a href="#cite_note-2"><span>[</span>3<span>]</span></a></sup>
 for the insertion into the sorted list. A simpler recursive method 
rebuilds the list each time (rather than splicing) and can use O(<i>n</i>) stack space.</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="c source-c">
<pre class="de1"><span class="kw4">struct</span> LIST
<span class="br0">{</span>
  <span class="kw4">struct</span> LIST <span class="sy0">*</span> pNext<span class="sy0">;</span>
  <span class="kw4">int</span>           iValue<span class="sy0">;</span>
<span class="br0">}</span><span class="sy0">;</span>
 
<span class="kw4">struct</span> LIST <span class="sy0">*</span> SortList<span class="br0">(</span><span class="kw4">struct</span> LIST <span class="sy0">*</span> pList<span class="br0">)</span>
<span class="br0">{</span>
  <span class="coMULTI">/* build up the sorted array from the empty list */</span>
  <span class="kw4">struct</span> LIST <span class="sy0">*</span> pSorted <span class="sy0">=</span> NULL<span class="sy0">;</span>
 
  <span class="coMULTI">/* take items off the input list one by one until empty */</span>
  <span class="kw1">while</span> <span class="br0">(</span>pList <span class="sy0">!=</span> NULL<span class="br0">)</span>
    <span class="br0">{</span>
      <span class="coMULTI">/* remember the head */</span>
      <span class="kw4">struct</span> LIST <span class="sy0">*</span>   pHead  <span class="sy0">=</span> pList<span class="sy0">;</span>
      <span class="coMULTI">/* trailing pointer for efficient splice */</span>
      <span class="kw4">struct</span> LIST <span class="sy0">**</span> ppTrail <span class="sy0">=</span> <span class="sy0">&amp;</span>pSorted<span class="sy0">;</span>
 
      <span class="coMULTI">/* pop head off list */</span>
      pList <span class="sy0">=</span> pList<span class="sy0">-&gt;</span>pNext<span class="sy0">;</span>
 
      <span class="coMULTI">/* splice head into sorted list at proper place */</span>
      <span class="kw1">while</span> <span class="br0">(</span>TRUE<span class="br0">)</span>
        <span class="br0">{</span>
          <span class="coMULTI">/* does head belong here? */</span>
          <span class="kw1">if</span> <span class="br0">(</span><span class="sy0">*</span>ppTrail <span class="sy0">==</span> NULL <span class="sy0">||</span> pHead<span class="sy0">-&gt;</span>iValue <span class="sy0">&lt;</span> <span class="br0">(</span><span class="sy0">*</span>ppTrail<span class="br0">)</span><span class="sy0">-&gt;</span>iValue<span class="br0">)</span>
            <span class="br0">{</span>
              <span class="coMULTI">/* yes */</span>
              pHead<span class="sy0">-&gt;</span>pNext <span class="sy0">=</span> <span class="sy0">*</span>ppTrail<span class="sy0">;</span>
              <span class="sy0">*</span>ppTrail <span class="sy0">=</span> pHead<span class="sy0">;</span>
              <span class="kw2">break</span><span class="sy0">;</span>
            <span class="br0">}</span>
          <span class="kw1">else</span>
            <span class="br0">{</span>
              <span class="coMULTI">/* no - continue down the list */</span>
              ppTrail <span class="sy0">=</span> <span class="sy0">&amp;</span> <span class="br0">(</span><span class="sy0">*</span>ppTrail<span class="br0">)</span><span class="sy0">-&gt;</span>pNext<span class="sy0">;</span>
            <span class="br0">}</span>
        <span class="br0">}</span>
    <span class="br0">}</span>
 
  <span class="kw1">return</span> pSorted<span class="sy0">;</span>
<span class="br0">}</span>
</pre>
</div>
</div>
</div><a id="anchor_4" href="#section_4" class="section_anchors back_to_top">↑Jump back a section</a></div><div class="section"><h2 class="section_heading" id="section_5"><button>Show</button><span id="References">References</span></h2><div class="content_block" id="content_5">
<div class="reflist" style="list-style-type: decimal;">
<ol class="references">
<li id="cite_note-0">
<span class="mw-cite-backlink"><b><a href="#cite_ref-0">^</a></b></span> <span class="reference-text">Robert Sedgewick, <i>Algorithms</i>, Addison-Wesley 1983 (chapter 8 p. 95)</span>
</li>
<li id="cite_note-1">
<span class="mw-cite-backlink"><b><a href="#cite_ref-1">^</a></b></span> <span class="reference-text"><a rel="nofollow" class="external free" href="http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.9.3665">http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.9.3665</a></span>
</li>
<li id="cite_note-2">
<span class="mw-cite-backlink"><b><a href="#cite_ref-2">^</a></b></span> <span class="reference-text"><a rel="nofollow" class="external free" href="http://euler.vcsu.edu:7000/11421/">http://euler.vcsu.edu:7000/11421/</a></span>
</li>
</ol>
</div>
<ul>
<li>
<span class="citation" id="CITEREFBenderFarach-ColtonMosteiro">Bender, Michael A.; Farach-Colton, Martín; Mosteiro, Miguel, <a rel="nofollow" class="external text" href="http://www.cs.sunysb.edu/%7Ebender/newpub/BenderFaMo06-librarysort.pdf"><i>Insertion Sort is O(n log n)</i></a><span class="printonly">, <a rel="nofollow" class="external free" href="http://www.cs.sunysb.edu/%7Ebender/newpub/BenderFaMo06-librarysort.pdf">http://www.cs.sunysb.edu/~bender/newpub/BenderFaMo06-librarysort.pdf</a></span></span><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=Insertion+Sort+is+O%28n+log+n%29&amp;rft.aulast=Bender&amp;rft.aufirst=Michael+A.&amp;rft.au=Bender%2C%26%2332%3BMichael+A.&amp;rft.au=Farach-Colton%2C%26%2332%3BMart%26iacute%3Bn&amp;rft.au=Mosteiro%2C%26%2332%3BMiguel&amp;rft_id=http%3A%2F%2Fwww.cs.sunysb.edu%2F%7Ebender%2Fnewpub%2FBenderFaMo06-librarysort.pdf&amp;rfr_id=info:sid/en.wikipedia.org:Insertion_sort"><span style="display: none;">&nbsp;</span></span>; also <a rel="nofollow" class="external free" href="http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.60.3758">http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.60.3758</a>; republished? in Theory of Computing Systems Volume 39 Issue 3, June 2006 <a rel="nofollow" class="external free" href="http://dl.acm.org/citation.cfm?id=1132705">http://dl.acm.org/citation.cfm?id=1132705</a>
</li>
<li>
<a href="http://en.m.wikipedia.org/wiki/Thomas_H._Cormen" title="Thomas H. Cormen">Thomas H. Cormen</a>, <a href="http://en.m.wikipedia.org/wiki/Charles_E._Leiserson" title="Charles E. Leiserson">Charles E. Leiserson</a>, <a href="http://en.m.wikipedia.org/wiki/Ronald_L._Rivest" title="Ronald L. Rivest" class="mw-redirect">Ronald L. Rivest</a>, and <a href="http://en.m.wikipedia.org/wiki/Clifford_Stein" title="Clifford Stein">Clifford Stein</a>. <i><a href="http://en.m.wikipedia.org/wiki/Introduction_to_Algorithms" title="Introduction to Algorithms">Introduction to Algorithms</a></i>, Second Edition. MIT Press and McGraw-Hill, 2001. <a href="http://en.m.wikipedia.org/wiki/Special:BookSources/0262032937" class="internal mw-magiclink-isbn">ISBN 0-262-03293-7</a>. Section 2.1: Insertion sort, pp.&nbsp;15–21.</li>
<li>
<a href="http://en.m.wikipedia.org/wiki/Donald_Knuth" title="Donald Knuth">Donald Knuth</a>. <i>The Art of Computer Programming</i>, Volume 3: <i>Sorting and Searching</i>, Second Edition. Addison-Wesley, 1998. <a href="http://en.m.wikipedia.org/wiki/Special:BookSources/0201896850" class="internal mw-magiclink-isbn">ISBN 0-201-89685-0</a>. Section 5.2.1: Sorting by Insertion, pp.&nbsp;80–105.</li>
<li>
<span class="citation" id="CITEREFSedgewick1983"><a href="http://en.m.wikipedia.org/wiki/Robert_Sedgewick_%28computer_scientist%29" title="Robert Sedgewick (computer scientist)">Sedgewick, Robert</a> (1983), <i>Algorithms</i>, Addison-Wesley, <a href="http://en.m.wikipedia.org/wiki/International_Standard_Book_Number" title="International Standard Book Number">ISBN</a>&nbsp;<a href="http://en.m.wikipedia.org/wiki/Special:BookSources/978-0-201-06672-2" title="Special:BookSources/978-0-201-06672-2">978-0-201-06672-2</a></span><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=Algorithms&amp;rft.aulast=Sedgewick&amp;rft.aufirst=Robert&amp;rft.au=Sedgewick%2C%26%2332%3BRobert&amp;rft.date=1983&amp;rft.pub=Addison-Wesley&amp;rft.isbn=978-0-201-06672-2&amp;rfr_id=info:sid/en.wikipedia.org:Insertion_sort"><span style="display: none;">&nbsp;</span></span>, Chapter 8, pp. 95–??</li>
</ul>
</div><a id="anchor_5" href="#section_5" class="section_anchors back_to_top">↑Jump back a section</a></div><div class="section"><h2 class="section_heading" id="section_6"><button>Show</button><span id="External_links">External links</span></h2><div class="content_block" id="content_6">
<table class="metadata mbox-small plainlinks" style="border: 1px solid rgb(170, 170, 170); background-color: rgb(249, 249, 249);"><tbody><tr>
<td class="mbox-image"><img alt="" src="Insertion_sort_files/40px-Wikibooks-logo-en-noslogan.png" width="40" height="40"></td>
<td class="mbox-text" style="">The Wikibook <i><a class="external text" href="http://en.wikibooks.org/wiki/Algorithm_implementation">Algorithm implementation</a></i> has a page on the topic of
<div style="margin-left:10px;"><i><b><a class="external text" href="http://en.wikibooks.org/wiki/Algorithm_implementation/Sorting/Insertion_sort">Insertion sort</a></b></i></div>
</td>
</tr></tbody></table>
<table class="metadata mbox-small plainlinks" style="border: 1px solid rgb(170, 170, 170); background-color: rgb(249, 249, 249);"><tbody><tr>
<td class="mbox-image"><img alt="" src="Insertion_sort_files/30px-Commons-logo.png" width="30" height="40"></td>
<td class="mbox-text" style="">Wikimedia Commons has media related to: <i><b><a class="external text" href="http://commons.wikimedia.org/wiki/Category:Insertion_sort">Insertion sort</a></b></i>
</td>
</tr></tbody></table>
<ul>
<li>
<a rel="nofollow" class="external text" href="http://www.pathcom.com/%7Evadco/binary.html">Binary Insertion Sort - Scoreboard</a> – Complete Investigation and C Implementation – By JohnPaul Adamovsky</li>
<li>
<a rel="nofollow" class="external text" href="http://electrofriends.com/source-codes/software-programs/c/sorting-programs/program-to-sort-the-numbers-using-insertion-sort/">Insertion Sort in C with demo</a> - Insertion Sort in C with demo</li>
<li>
<a rel="nofollow" class="external text" href="http://corewar.co.uk/assembly/insertion.htm">Insertion Sort</a> - a comparison with other O(n^2) sorting algorithms</li>
<li>
<a rel="nofollow" class="external text" href="http://www.sorting-algorithms.com/insertion-sort">Animated Sorting Algorithms: Insertion Sort</a> – graphical demonstration and discussion of insertion sort</li>
<li>
<a rel="nofollow" class="external text" href="http://literateprograms.org/Category:Insertion_sort">Category:Insertion Sort - LiteratePrograms</a> – implementations of insertion sort in various programming languages</li>
<li>
<a rel="nofollow" class="external text" href="http://coderaptors.com/?InsertionSort">InsertionSort</a> – colored, graphical Java applet that allows experimentation with the initial input and provides statistics</li>
<li>
<a rel="nofollow" class="external text" href="http://www.cs.ubc.ca/spider/harrison/Java/sorting-demo.html">Sorting Algorithms Demo</a> – visual demonstrations of sorting algorithms (implemented in Java)</li>
<li><a rel="nofollow" class="external text" href="http://www.algolist.net/Algorithms/Sorting/Insertion_sort">Insertion sort illustrated explanation. Java and C++ implementations.</a></li>
</ul>
<table class="navbox" style="border-spacing: 0pt;" cellspacing="0"><tbody><tr>
<td style="padding: 2px;">
<table class="nowraplinks collapsible autocollapse navbox-inner" style="border-spacing: 0pt; background: none repeat scroll 0% 0% transparent; color: inherit;" cellspacing="0">
<tbody><tr>
<th scope="col" style="" class="navbox-title" colspan="2">
<div class="noprint plainlinks hlist navbar mini" style="">
<ul>
<li class="nv-view"><a href="http://en.m.wikipedia.org/wiki/Template:Sorting" title="Template:Sorting"><span title="View this template" style=";;background:none transparent;border:none;">v</span></a></li>
<li class="nv-talk"><a href="http://en.m.wikipedia.org/wiki/Template_talk:Sorting" title="Template talk:Sorting"><span title="Discuss this template" style=";;background:none transparent;border:none;">t</span></a></li>
<li class="nv-edit"><a class="external text" href="http://en.wikipedia.org/w/index.php?title=Template:Sorting&amp;action=edit"><span title="Edit this template" style=";;background:none transparent;border:none;">e</span></a></li>
</ul>
</div>
<div class="" style="font-size:110%;"><a href="http://en.m.wikipedia.org/wiki/Sorting_algorithm" title="Sorting algorithm">Sorting algorithms</a></div>
</th>
</tr>
<tr style="height: 2px;">
<td></td>
</tr>
<tr>
<th scope="row" class="navbox-group" style="">Theory</th>
<td style="text-align: left; border-left-width: 2px; border-left-style: solid; width: 100%; padding: 0px;" class="navbox-list navbox-odd hlist">
<div style="padding:0em 0.25em">
<ul>
<li><a href="http://en.m.wikipedia.org/wiki/Computational_complexity_theory" title="Computational complexity theory">Computational complexity theory</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Big_O_notation" title="Big O notation">Big O notation</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Total_order" title="Total order">Total order</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/List_%28computing%29" title="List (computing)" class="mw-redirect">Lists</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Sorting_algorithm#Stability" title="Sorting algorithm">Stability</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Comparison_sort" title="Comparison sort">Comparison sort</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Adaptive_sort" title="Adaptive sort">Adaptive sort</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Sorting_network" title="Sorting network">Sorting network</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Integer_sorting" title="Integer sorting">Integer sorting</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height: 2px;">
<td></td>
</tr>
<tr>
<th scope="row" class="navbox-group" style="">Exchange sorts</th>
<td style="text-align: left; border-left-width: 2px; border-left-style: solid; width: 100%; padding: 0px;" class="navbox-list navbox-even hlist">
<div style="padding:0em 0.25em">
<ul>
<li><a href="http://en.m.wikipedia.org/wiki/Bubble_sort" title="Bubble sort">Bubble sort</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Cocktail_sort" title="Cocktail sort">Cocktail sort</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Odd%E2%80%93even_sort" title="Odd–even sort">Odd–even sort</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Comb_sort" title="Comb sort">Comb sort</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Gnome_sort" title="Gnome sort">Gnome sort</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Quicksort" title="Quicksort">Quicksort</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Stooge_sort" title="Stooge sort">Stooge sort</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Bogosort" title="Bogosort">Bogosort</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height: 2px;">
<td></td>
</tr>
<tr>
<th scope="row" class="navbox-group" style="">Selection sorts</th>
<td style="text-align: left; border-left-width: 2px; border-left-style: solid; width: 100%; padding: 0px;" class="navbox-list navbox-odd hlist">
<div style="padding:0em 0.25em">
<ul>
<li><a href="http://en.m.wikipedia.org/wiki/Selection_sort" title="Selection sort">Selection sort</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Heapsort" title="Heapsort">Heapsort</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Smoothsort" title="Smoothsort">Smoothsort</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Cartesian_tree#Application_in_sorting" title="Cartesian tree">Cartesian tree sort</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Tournament_sort" title="Tournament sort">Tournament sort</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Cycle_sort" title="Cycle sort">Cycle sort</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height: 2px;">
<td></td>
</tr>
<tr>
<th scope="row" class="navbox-group" style="">Insertion sorts</th>
<td style="text-align: left; border-left-width: 2px; border-left-style: solid; width: 100%; padding: 0px;" class="navbox-list navbox-even hlist">
<div style="padding:0em 0.25em">
<ul>
<li><strong class="selflink">Insertion sort</strong></li>
<li><a href="http://en.m.wikipedia.org/wiki/Shellsort" title="Shellsort">Shellsort</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Tree_sort" title="Tree sort">Tree sort</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Library_sort" title="Library sort">Library sort</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Patience_sorting" title="Patience sorting">Patience sorting</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height: 2px;">
<td></td>
</tr>
<tr>
<th scope="row" class="navbox-group" style="">Merge sorts</th>
<td style="text-align: left; border-left-width: 2px; border-left-style: solid; width: 100%; padding: 0px;" class="navbox-list navbox-odd hlist">
<div style="padding:0em 0.25em">
<ul>
<li><a href="http://en.m.wikipedia.org/wiki/Merge_sort" title="Merge sort">Merge sort</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Polyphase_merge_sort" title="Polyphase merge sort">Polyphase merge sort</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Strand_sort" title="Strand sort">Strand sort</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height: 2px;">
<td></td>
</tr>
<tr>
<th scope="row" class="navbox-group" style="">Distribution sorts</th>
<td style="text-align: left; border-left-width: 2px; border-left-style: solid; width: 100%; padding: 0px;" class="navbox-list navbox-even hlist">
<div style="padding:0em 0.25em">
<ul>
<li><a href="http://en.m.wikipedia.org/wiki/American_flag_sort" title="American flag sort">American flag sort</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Bead_sort" title="Bead sort">Bead sort</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Bucket_sort" title="Bucket sort">Bucket sort</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Burstsort" title="Burstsort">Burstsort</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Counting_sort" title="Counting sort">Counting sort</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Pigeonhole_sort" title="Pigeonhole sort">Pigeonhole sort</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Proxmap_sort" title="Proxmap sort">Proxmap sort</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Radix_sort" title="Radix sort">Radix sort</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Flashsort" title="Flashsort">Flashsort</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height: 2px;">
<td></td>
</tr>
<tr>
<th scope="row" class="navbox-group" style="">Concurrent sorts</th>
<td style="text-align: left; border-left-width: 2px; border-left-style: solid; width: 100%; padding: 0px;" class="navbox-list navbox-odd hlist">
<div style="padding:0em 0.25em">
<ul>
<li><a href="http://en.m.wikipedia.org/wiki/Bitonic_sorter" title="Bitonic sorter">Bitonic sorter</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Batcher_odd%E2%80%93even_mergesort" title="Batcher odd–even mergesort">Batcher odd–even mergesort</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Pairwise_sorting_network" title="Pairwise sorting network">Pairwise sorting network</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height: 2px;">
<td></td>
</tr>
<tr>
<th scope="row" class="navbox-group" style="">Hybrid sorts</th>
<td style="text-align: left; border-left-width: 2px; border-left-style: solid; width: 100%; padding: 0px;" class="navbox-list navbox-even hlist">
<div style="padding:0em 0.25em">
<ul>
<li><a href="http://en.m.wikipedia.org/wiki/Timsort" title="Timsort">Timsort</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Introsort" title="Introsort">Introsort</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Spreadsort" title="Spreadsort">Spreadsort</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/UnShuffle_sort" title="UnShuffle sort">UnShuffle sort</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/JSort" title="JSort">JSort</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height: 2px;">
<td></td>
</tr>
<tr>
<th scope="row" class="navbox-group" style="">Other</th>
<td style="text-align: left; border-left-width: 2px; border-left-style: solid; width: 100%; padding: 0px;" class="navbox-list navbox-odd hlist">
<div style="padding:0em 0.25em">
<ul>
<li><a href="http://en.m.wikipedia.org/wiki/Topological_sorting" title="Topological sorting">Topological sorting</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Pancake_sorting" title="Pancake sorting">Pancake sorting</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Spaghetti_sort" title="Spaghetti sort">Spaghetti sort</a></li>
</ul>
</div>
</td>
</tr>
</tbody></table>
</td>
</tr></tbody></table>

</div>
</div>		</div>
	</div>
			<div id="footer">
			<h2 class="section_heading" id="section_footer"><button>Show</button>
		<div class="license">Wikipedia ™</div>		<span class="toggleCopyright">
			<span class="more">more</span><span class="less">less</span>
		</span>
	</h2>
	<div class="content_block" id="content_footer">
		<ul class="settings">
			<li>
				<span class="left separator"><a id="mw-mf-display-toggle" href="http://en.wikipedia.org/w/index.php?title=Insertion_sort&amp;mobileaction=toggle_view_desktop">Desktop</a></span><span class="right">Mobile</span>
			</li>
			<li>
				<span class="left"><a href="http://wikimediafoundation.org/wiki/Terms_of_use?useformat=mobile">Terms of Use</a></span><span class="right">Images ON / <a href="http://en.m.wikipedia.org/w/index.php?title=Special:MobileOptions/DisableImages&amp;returnto=Insertion+sort&amp;mobiletoken=5c89e355d2af09275b3b2ed3653e1683" title="Special:MobileOptions/DisableImages" id="imagetoggle">OFF</a></span>
			</li>
			<li class="notice">
				Article by <a href="http://en.m.wikipedia.org/w/index.php?title=Insertion_sort&amp;action=history">contributors</a> like you<br>
				Content available under <a href="http://en.m.wikipedia.org/wiki/Wikipedia:Text_of_Creative_Commons_Attribution-ShareAlike_3.0_Unported_License?useformat=mobile">CC BY-SA 3.0</a>			</li>
		</ul>
		<ul class="links">
			<li>
				<a href="http://en.m.wikipedia.org/w/index.php?title=Special:MobileFeedback&amp;returnto=Insertion+sort&amp;feedbacksource=MobileFrontend">Contact</a>
			</li><li>
			<a href="http://wikimediafoundation.org/wiki/Privacy_policy" title="wikimedia:Privacy policy">Privacy</a></li><li>
			<a href="http://en.m.wikipedia.org/wiki/Wikipedia:About" title="Wikipedia:About">About</a></li><li>
			<a href="http://en.m.wikipedia.org/wiki/Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
		</ul>
	</div>
	</div>
				<!--[if gt IE 7]><!-->
		<script type="text/javascript">mw={loader:{state:function(){}}};</script>		<script src="Insertion_sort_files/load_002.php" type="text/javascript"></script>
<script src="Insertion_sort_files/load.php" type="text/javascript"></script>	<script type="text/javascript">
	window.onload = function() {
		mw.mobileFrontend.init();
	};
	</script>
	<!----><!--[endif]---->
	
	<div style="display: none;" id="mf-references"><div></div><button>close</button></div></body></html>