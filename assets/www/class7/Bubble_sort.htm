<!DOCTYPE html>
<html class="jsEnabled togglingEnabled" dir="ltr" lang="en"><head>
		<title>Bubble sort - Wikipedia, the free encyclopedia</title>
		<meta http-equiv="content-type" content="text/html; charset=UTF-8">
		<meta name="robots" content="noindex,nofollow">		<link rel="stylesheet" href="Bubble_sort_files/load.css" type="text/css" media="all">		<meta name="viewport" content="initial-scale=1.0, user-scalable=no">
		<link rel="apple-touch-icon" href="http://en.wikipedia.org/apple-touch-icon.png">		<script type="text/javascript">
			if( typeof mw === 'undefined' ) {
				mw = {};
			}
			var mwMobileFrontendConfig = {"messages":{"expand-section":"Show","collapse-section":"Hide","remove-results":"Back...","mobile-frontend-search-noresults":"No article titles match your search. Change your search, or press the keyboard search button to search inside articles.","mobile-frontend-search-help":"Type search term above and matching article titles will appear here.","contents-heading":"Contents","language-heading":"Read this article in","mobile-frontend-close-section":"Close this section","mobile-frontend-language-header":"This article is available in 37 languages","mobile-frontend-language-footer":"<a href=\"\/wiki\/Special:Special:MobileOptions\/Language\">Wikipedia is available in other languages.<\/a>","mobile-frontend-language-site-choose":"Search language","mobile-frontend-language-site-nomatches":"No matching languages"},"settings":{"scriptPath":"\/w","useFormatCookieName":"mf_mobileFormat","useFormatCookieDuration":-1,"useFormatCookieDomain":"en.wikipedia.org","useFormatCookiePath":"\/","stopMobileRedirectCookieName":"stopMobileRedirect","stopMobileRedirectCookieDuration":15552000,"stopMobileRedirectCookieDomain":".wikipedia.org","hookOptions":""}};
			document.documentElement.className = 'jsEnabled page-loading';		</script>
		<link rel="canonical" href="http://en.wikipedia.org/wiki/Bubble_sort">
	</head>
	<body class="mobile mw-mf-checkboxes">
							<div id="mw-mf-header">
					<form id="mw-mf-searchForm" action="/w/index.php" class="search_bar" method="get">
							<img alt="Logo" id="mw-mf-logo" src="Bubble_sort_files/W_logo_for_Mobile_Frontend.gif" width="35" height="22">
						<input value="Special:Search" name="title" type="hidden">
			<div id="mw-mf-sq" class="divclearable">
				<input name="search" id="mw-mf-search" size="22" autocomplete="off" maxlength="1024" class="search" placeholder="Type your search here..." type="search">
				<img src="Bubble_sort_files/blank.gif" alt="Clear" class="clearlink" id="mw-mf-clearsearch" title="Clear">
			</div>
						<button id="goButton" class="goButton" type="submit">
				<img src="Bubble_sort_files/blank.gif" alt="Go" title="Go">
			</button>
					</form>
									<div class="nav" id="nav">
				<div id="mw-mf-language-selection">
		Language:<br>
		<select id="languageselection"><option value="http://en.wikipedia.org/wiki/Bubble_sort" selected="selected">English</option><option value="//ar.m.wikipedia.org/wiki/%D8%AA%D8%B1%D8%AA%D9%8A%D8%A8_%D8%A7%D9%84%D9%81%D9%82%D8%A7%D8%B9%D8%A7%D8%AA">العربية</option><option value="//bg.m.wikipedia.org/wiki/%D0%9C%D0%B5%D1%82%D0%BE%D0%B4_%D0%BD%D0%B0_%D0%BC%D0%B5%D1%85%D1%83%D1%80%D1%87%D0%B5%D1%82%D0%BE">български</option><option value="//ca.m.wikipedia.org/wiki/Bubble-sort">català</option><option value="//cs.m.wikipedia.org/wiki/Bublinkov%C3%A9_%C5%99azen%C3%AD">česky</option><option value="//da.m.wikipedia.org/wiki/Boblesortering">dansk</option><option value="//de.m.wikipedia.org/wiki/Bubblesort">Deutsch</option><option value="//et.m.wikipedia.org/wiki/Mullsortimine">eesti</option><option value="//el.m.wikipedia.org/wiki/%CE%A4%CE%B1%CE%BE%CE%B9%CE%BD%CF%8C%CE%BC%CE%B7%CF%83%CE%B7_%CF%86%CF%85%CF%83%CE%B1%CE%BB%CE%AF%CE%B4%CE%B1%CF%82">Ελληνικά</option><option value="//es.m.wikipedia.org/wiki/Ordenamiento_de_burbuja">español</option><option value="//fa.m.wikipedia.org/wiki/%D9%85%D8%B1%D8%AA%D8%A8%E2%80%8C%D8%B3%D8%A7%D8%B2%DB%8C_%D8%AD%D8%A8%D8%A7%D8%A8%DB%8C">فارسی</option><option value="//fr.m.wikipedia.org/wiki/Tri_%C3%A0_bulles">français</option><option value="//ko.m.wikipedia.org/wiki/%EA%B1%B0%ED%92%88_%EC%A0%95%EB%A0%AC">한국어</option><option value="//is.m.wikipedia.org/wiki/V%C3%ADxlunarr%C3%B6%C3%B0un">íslenska</option><option value="//it.m.wikipedia.org/wiki/Bubble_sort">italiano</option><option value="//he.m.wikipedia.org/wiki/%D7%9E%D7%99%D7%95%D7%9F_%D7%91%D7%95%D7%A2%D7%95%D7%AA">עברית</option><option value="//kk.m.wikipedia.org/wiki/%D0%9A%D3%A9%D0%BF%D1%96%D1%80%D1%88%D1%96%D0%BA%D1%82%D1%96%D0%BA_%D1%81%D2%B1%D1%80%D1%8B%D0%BF%D1%82%D0%B0%D1%83">Қазақша</option><option value="//ku.m.wikipedia.org/wiki/R%C3%AAzkerdi%C5%9F%C3%AA_%C3%A7imokan">Kurdî</option><option value="//lt.m.wikipedia.org/wiki/Burbulo_rikiavimo_algoritmas">lietuvių</option><option value="//hu.m.wikipedia.org/wiki/Bubor%C3%A9krendez%C3%A9s">magyar</option><option value="//ml.m.wikipedia.org/wiki/%E0%B4%AC%E0%B4%AC%E0%B4%BF%E0%B5%BE_%E0%B4%B8%E0%B5%8B%E0%B5%BC%E0%B4%9F%E0%B5%8D%E0%B4%9F%E0%B5%8D">മലയാളം</option><option value="//nl.m.wikipedia.org/wiki/Bubblesort">Nederlands</option><option value="//ja.m.wikipedia.org/wiki/%E3%83%90%E3%83%96%E3%83%AB%E3%82%BD%E3%83%BC%E3%83%88">日本語</option><option value="//no.m.wikipedia.org/wiki/Sorteringsalgoritme#Boblesortering">‪norsk (bokmål)‬</option><option value="//pl.m.wikipedia.org/wiki/Sortowanie_b%C4%85belkowe">polski</option><option value="//pt.m.wikipedia.org/wiki/Bubble_sort">português</option><option value="//ru.m.wikipedia.org/wiki/%D0%A1%D0%BE%D1%80%D1%82%D0%B8%D1%80%D0%BE%D0%B2%D0%BA%D0%B0_%D0%BF%D1%83%D0%B7%D1%8B%D1%80%D1%8C%D0%BA%D0%BE%D0%BC">русский</option><option value="//simple.m.wikipedia.org/wiki/Bubble_sort">Simple English</option><option value="//sk.m.wikipedia.org/wiki/Bublinkov%C3%A9_triedenie">slovenčina</option><option value="//sl.m.wikipedia.org/wiki/Mehur%C4%8Dno_urejanje">slovenščina</option><option value="//fi.m.wikipedia.org/wiki/Kuplalajittelu">suomi</option><option value="//sv.m.wikipedia.org/wiki/Bubbelsortering">svenska</option><option value="//th.m.wikipedia.org/wiki/%E0%B8%81%E0%B8%B2%E0%B8%A3%E0%B9%80%E0%B8%A3%E0%B8%B5%E0%B8%A2%E0%B8%87%E0%B8%A5%E0%B8%B3%E0%B8%94%E0%B8%B1%E0%B8%9A%E0%B9%81%E0%B8%9A%E0%B8%9A%E0%B8%9F%E0%B8%AD%E0%B8%87">ไทย</option><option value="//tr.m.wikipedia.org/wiki/Kabarc%C4%B1k_s%C4%B1ralamas%C4%B1">Türkçe</option><option value="//uk.m.wikipedia.org/wiki/%D0%A1%D0%BE%D1%80%D1%82%D1%83%D0%B2%D0%B0%D0%BD%D0%BD%D1%8F_%D0%B1%D1%83%D0%BB%D1%8C%D0%B1%D0%B0%D1%88%D0%BA%D0%BE%D1%8E">українська</option><option value="//vi.m.wikipedia.org/wiki/S%E1%BA%AFp_x%E1%BA%BFp_n%E1%BB%95i_b%E1%BB%8Dt">Tiếng Việt</option><option value="//zh.m.wikipedia.org/wiki/%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F">中文</option></select>
	</div><br>
			<a href="http://en.m.wikipedia.org/wiki/Main_Page" id="homeButton" class="button">Home</a>
			<a href="http://en.m.wikipedia.org/wiki/Special:Random" id="randomButton" class="button">Random</a>
			</div>
		</div>
				<div id="results"><ul class="suggestions-results" title="No Results"><li class="suggestions-result">Type search term above and matching article titles will appear here.</li></ul></div>
		<div class="show" id="content_wrapper">
				<div id="content">
			<h1 id="firstHeading">Bubble sort</h1>			
<table class="infobox" style="width: 22em;" cellspacing="5">
<caption class="" style="">Bubble sort</caption>
<tbody><tr class="">
<td colspan="2" class="" style="text-align: center;">
<a href="http://en.m.wikipedia.org/wiki/File:Bubblesort-edited.png" class="image" title="Visualisation of bubblesort"><img alt="Visualisation of bubblesort" src="Bubble_sort_files/Bubblesort-edited.png" width="280" height="250"></a><br><span style="">A visual representation of how bubble sort works</span>
</td>
</tr>
<tr class="">
<th scope="row" style="text-align: left;">Class</th>
<td class="" style=""><a href="http://en.m.wikipedia.org/wiki/Sorting_algorithm" title="Sorting algorithm">Sorting algorithm</a></td>
</tr>
<tr class="">
<th scope="row" style="text-align: left;">Data structure</th>
<td class="" style=""><a href="http://en.m.wikipedia.org/wiki/Array_data_structure" title="Array data structure">Array</a></td>
</tr>
<tr class="">
<th scope="row" style="text-align: left;"><a href="http://en.m.wikipedia.org/wiki/Best,_worst_and_average_case" title="Best, worst and average case">Worst case performance</a></th>
<td class="" style=""><img class="tex" alt="O(n^2)" src="Bubble_sort_files/189317b4b935a745fcfaf95940d2b4f0.png"></td>
</tr>
<tr class="">
<th scope="row" style="text-align: left;"><a href="http://en.m.wikipedia.org/wiki/Best,_worst_and_average_case" title="Best, worst and average case">Best case performance</a></th>
<td class="" style=""><img class="tex" alt="O(n)" src="Bubble_sort_files/7ba55e7c64a9405a0b39a1107e90ca94.png"></td>
</tr>
<tr class="">
<th scope="row" style="text-align: left;"><a href="http://en.m.wikipedia.org/wiki/Best,_worst_and_average_case" title="Best, worst and average case">Average case performance</a></th>
<td class="" style=""><img class="tex" alt="O(n^2)" src="Bubble_sort_files/189317b4b935a745fcfaf95940d2b4f0.png"></td>
</tr>
<tr class="">
<th scope="row" style="text-align: left;"><a href="http://en.m.wikipedia.org/wiki/Best,_worst_and_average_case" title="Best, worst and average case">Worst case space complexity</a></th>
<td class="" style="">
<img class="tex" alt="O(1)" src="Bubble_sort_files/5e079a28737d5dd019a3b8f6133ee55e.png"> auxiliary</td>
</tr>
</tbody></table>
<p><b>Bubble sort</b>, sometimes incorrectly referred to as <b>sinking sort</b>, is a simple <a href="http://en.m.wikipedia.org/wiki/Sorting_algorithm" title="Sorting algorithm">sorting algorithm</a> that works by repeatedly stepping through the list to be sorted, comparing each pair of adjacent items and <a href="http://en.m.wikipedia.org/wiki/Swap_%28computer_science%29" title="Swap (computer science)">swapping</a>
 them if they are in the wrong order. The pass through the list is 
repeated until no swaps are needed, which indicates that the list is 
sorted. The algorithm gets its name from the way smaller elements 
"bubble" to the top of the list. Because it only uses comparisons to 
operate on elements, it is a <a href="http://en.m.wikipedia.org/wiki/Comparison_sort" title="Comparison sort">comparison sort</a>. Although the algorithm is simple, most other algorithms are more efficient for sorting large lists.</p>
<div class="section"><h2 class="section_heading" id="section_1"><button>Show</button><span id="Analysis">Analysis</span></h2><div class="content_block" id="content_1">
<div class="thumb tright">
<div class="thumbinner" style="width:302px;">
<a href="http://en.m.wikipedia.org/wiki/File:Bubble-sort-example-300px.gif" class="image"><img alt="" src="Bubble_sort_files/Bubble-sort-example-300px.gif" class="thumbimage" width="300" height="180"></a>
<div class="thumbcaption">

An example on bubble sort. Starting from the beginning of the list, 
compare every adjacent pair, swap their position if they are not in the 
right order (the latter one is smaller than the former one). After each 
iteration, one less element (the last one) is needed to be compared 
until there are no more elements left to be compared.</div>
</div>
</div>
<h3> <span class="mw-headline" id="Performance">Performance</span>
</h3>
<p>Bubble sort has worst-case and average complexity both <i>О</i>(<i>n</i><sup>2</sup>), where <i>n</i>
 is the number of items being sorted. There exist many sorting 
algorithms with substantially better worst-case or average complexity of
 <i>O</i>(<i>n</i> log <i>n</i>). Even other <i>О</i>(<i>n</i><sup>2</sup>) sorting algorithms, such as <a href="http://en.m.wikipedia.org/wiki/Insertion_sort" title="Insertion sort">insertion sort</a>, tend to have better performance than bubble sort. Therefore, bubble sort is not a practical sorting algorithm when <i>n</i> is large.</p>
<p>The only significant advantage that bubble sort has over most other implementations, even <a href="http://en.m.wikipedia.org/wiki/Quicksort" title="Quicksort">quicksort</a>, but not <a href="http://en.m.wikipedia.org/wiki/Insertion_sort" title="Insertion sort">insertion sort</a>,
 is that the ability to detect that the list is sorted is efficiently 
built into the algorithm. Performance of bubble sort over an 
already-sorted list (best-case) is <i>O</i>(<i>n</i>). By contrast, most other algorithms, even those with better <a href="http://en.m.wikipedia.org/wiki/Average-case_complexity" title="Average-case complexity">average-case complexity</a>, perform their entire sorting process on the set and thus are more complex. However, not only does <a href="http://en.m.wikipedia.org/wiki/Insertion_sort" title="Insertion sort">insertion sort</a> have this mechanism too, but it also performs better on a list that is substantially sorted (having a small number of <a href="http://en.m.wikipedia.org/wiki/Inversion_%28discrete_mathematics%29" title="Inversion (discrete mathematics)">inversions</a>).</p>
<h3> <span class="mw-headline" id="Rabbits_and_turtles">Rabbits and turtles</span>
</h3>
<p>The positions of the elements in bubble sort will play a large part 
in determining its performance. Large elements at the beginning of the 
list do not pose a problem, as they are quickly swapped. Small elements 
towards the end, however, move to the beginning extremely slowly. This 
has led to these types of elements being named rabbits and turtles, 
respectively.</p>
<p>Various efforts have been made to eliminate turtles to improve upon the speed of bubble sort. <a href="http://en.m.wikipedia.org/wiki/Cocktail_sort" title="Cocktail sort">Cocktail sort</a>
 is a bi-directional bubble sort that goes from beginning to end, and 
then reverses itself, going end to beginning. It can move turtles fairly
 well, but it retains <i><a href="http://en.m.wikipedia.org/wiki/Big_O_notation" title="Big O notation">O(n<sup>2</sup>)</a></i> worst-case complexity. <a href="http://en.m.wikipedia.org/wiki/Comb_sort" title="Comb sort">Comb sort</a>
 compares elements separated by large gaps, and can move turtles 
extremely quickly before proceeding to smaller and smaller gaps to 
smooth out the list. Its average speed is comparable to faster 
algorithms like <a href="http://en.m.wikipedia.org/wiki/Quicksort" title="Quicksort">quicksort</a>.</p>
<h3> <span class="mw-headline" id="Step-by-step_example">Step-by-step example</span>
</h3>
<p>Let us take the array of numbers "5 1 4 2 8", and sort the array from
 lowest number to greatest number using bubble sort algorithm. In each 
step, elements written in <b>bold</b> are being compared. Three passes will be required.</p>
<p><b>First Pass:</b><br>
( <b>5</b> <b>1</b> 4 2 8 ) <img class="tex" alt="\to" src="Bubble_sort_files/da558173e1f2ddfeb273751d481f9a52.png"> ( <b>1</b> <b>5</b> 4 2 8 ), Here, algorithm compares the first two elements, and swaps them.<br>
( 1 <b>5</b> <b>4</b> 2 8 ) <img class="tex" alt="\to" src="Bubble_sort_files/da558173e1f2ddfeb273751d481f9a52.png"> ( 1 <b>4</b> <b>5</b> 2 8 ), Swap since 5 &gt; 4<br>
( 1 4 <b>5</b> <b>2</b> 8 ) <img class="tex" alt="\to" src="Bubble_sort_files/da558173e1f2ddfeb273751d481f9a52.png"> ( 1 4 <b>2</b> <b>5</b> 8 ), Swap since 5 &gt; 2<br>
( 1 4 2 <b>5</b> <b>8</b> ) <img class="tex" alt="\to" src="Bubble_sort_files/da558173e1f2ddfeb273751d481f9a52.png"> ( 1 4 2 <b>5</b> <b>8</b> ), Now, since these elements are already in order (8 &gt; 5), algorithm does not swap them.<br><b>Second Pass:</b><br>
( <b>1</b> <b>4</b> 2 5 8 ) <img class="tex" alt="\to" src="Bubble_sort_files/da558173e1f2ddfeb273751d481f9a52.png"> ( <b>1</b> <b>4</b> 2 5 8 )<br>
( 1 <b>4</b> <b>2</b> 5 8 ) <img class="tex" alt="\to" src="Bubble_sort_files/da558173e1f2ddfeb273751d481f9a52.png"> ( 1 <b>2</b> <b>4</b> 5 8 ), Swap since 4 &gt; 2<br>
( 1 2 <b>4</b> <b>5</b> 8 ) <img class="tex" alt="\to" src="Bubble_sort_files/da558173e1f2ddfeb273751d481f9a52.png"> ( 1 2 <b>4</b> <b>5</b> 8 )<br>
( 1 2 4 <b>5</b> <b>8</b> ) <img class="tex" alt="\to" src="Bubble_sort_files/da558173e1f2ddfeb273751d481f9a52.png"> ( 1 2 4 <b>5</b> <b>8</b> )<br>
Now, the array is already sorted, but our algorithm does not know if it is completed. The algorithm needs one <b>whole</b> pass without <b>any</b> swap to know it is sorted.<br><b>Third Pass:</b><br>
( <b>1</b> <b>2</b> 4 5 8 ) <img class="tex" alt="\to" src="Bubble_sort_files/da558173e1f2ddfeb273751d481f9a52.png"> ( <b>1</b> <b>2</b> 4 5 8 )<br>
( 1 <b>2</b> <b>4</b> 5 8 ) <img class="tex" alt="\to" src="Bubble_sort_files/da558173e1f2ddfeb273751d481f9a52.png"> ( 1 <b>2</b> <b>4</b> 5 8 )<br>
( 1 2 <b>4</b> <b>5</b> 8 ) <img class="tex" alt="\to" src="Bubble_sort_files/da558173e1f2ddfeb273751d481f9a52.png"> ( 1 2 <b>4</b> <b>5</b> 8 )<br>
( 1 2 4 <b>5</b> <b>8</b> ) <img class="tex" alt="\to" src="Bubble_sort_files/da558173e1f2ddfeb273751d481f9a52.png"> ( 1 2 4 <b>5</b> <b>8</b> )<br></p>
</div><a id="anchor_1" href="#section_1" class="section_anchors back_to_top">↑Jump back a section</a></div><div class="section"><h2 class="section_heading" id="section_2"><button>Show</button><span id="Implementation">Implementation</span></h2><div class="content_block" id="content_2">
<h3> <span class="mw-headline" id="Pseudocode_implementation">Pseudocode implementation</span>
</h3>
<p>The algorithm can be expressed as (0-based array):</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="pli source-pli">
<pre class="de1"><span class="kw1">procedure</span> bubbleSort<span class="br0">(</span> A <span class="sy0">:</span> <span class="kw1">list</span> of sortable items <span class="br0">)</span>
   <span class="kw1">repeat</span>     
     swapped <span class="sy0">=</span> false
     for i <span class="sy0">=</span> <span class="nu0">1</span> <span class="kw1">to</span> <span class="kw1">length</span><span class="br0">(</span>A<span class="br0">)</span> <span class="sy0">-</span> <span class="nu0">1</span> inclusive <span class="kw1">do</span><span class="sy0">:</span>
       <span class="coMULTI">/* if this pair is out of order */</span>
       <span class="kw1">if</span> A<span class="br0">[</span>i<span class="sy0">-</span><span class="nu0">1</span><span class="br0">]</span> <span class="sy0">&gt;</span> A<span class="br0">[</span>i<span class="br0">]</span> <span class="kw1">then</span>
         <span class="coMULTI">/* swap them and remember something changed */</span>
         swap<span class="br0">(</span> A<span class="br0">[</span>i<span class="sy0">-</span><span class="nu0">1</span><span class="br0">]</span><span class="sy0">,</span> A<span class="br0">[</span>i<span class="br0">]</span> <span class="br0">)</span>
         swapped <span class="sy0">=</span> true
       <span class="kw1">end</span> <span class="kw1">if</span>
     <span class="kw1">end</span> for
   <span class="kw1">until</span> not swapped
<span class="kw1">end</span> <span class="kw1">procedure</span>
</pre>
</div>
</div>
<h3> <span class="mw-headline" id="Optimizing_bubble_sort">Optimizing bubble sort</span>
</h3>
<p>The bubble sort algorithm can be easily optimized by observing that 
the n-th pass finds the n-th largest element and puts it into its final 
place. So, the inner loop can avoid looking at the last n-1 items when 
running for the n-th time:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="pli source-pli">
<pre class="de1"><span class="kw1">procedure</span> bubbleSort<span class="br0">(</span> A <span class="sy0">:</span> <span class="kw1">list</span> of sortable items <span class="br0">)</span>
    n <span class="sy0">=</span> <span class="kw1">length</span><span class="br0">(</span>A<span class="br0">)</span>
    <span class="kw1">repeat</span>
       swapped <span class="sy0">=</span> false
       for i <span class="sy0">=</span> <span class="nu0">1</span> <span class="kw1">to</span> n<span class="sy0">-</span><span class="nu0">1</span> inclusive <span class="kw1">do</span>
          <span class="kw1">if</span> A<span class="br0">[</span>i<span class="sy0">-</span><span class="nu0">1</span><span class="br0">]</span> <span class="sy0">&gt;</span> A<span class="br0">[</span>i<span class="br0">]</span> <span class="kw1">then</span>
             swap<span class="br0">(</span>A<span class="br0">[</span>i<span class="sy0">-</span><span class="nu0">1</span><span class="br0">]</span><span class="sy0">,</span> A<span class="br0">[</span>i<span class="br0">]</span><span class="br0">)</span>
             swapped <span class="sy0">=</span> true
          <span class="kw1">end</span> <span class="kw1">if</span>
       <span class="kw1">end</span> for
       n <span class="sy0">=</span> n <span class="sy0">-</span> <span class="nu0">1</span>
    <span class="kw1">until</span> not swapped
<span class="kw1">end</span> <span class="kw1">procedure</span>
</pre>
</div>
</div>
<p>More generally, it can happen that more than one element is placed in
 their final position on a single pass. In particular, after every pass,
 all elements after the last swap are sorted, and do not need to be 
checked again. This allows us to skip over a lot of the elements, 
resulting in about a worst case 50% improvement in comparison count 
(though no improvement in swap counts), and adds very little complexity 
because the new code subsumes the "swapped" variable:</p>
<p>To accomplish this in <a href="http://en.m.wikipedia.org/wiki/Pseudocode" title="Pseudocode">pseudocode</a> we write the following:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="pli source-pli">
<pre class="de1"><span class="kw1">procedure</span> bubbleSort<span class="br0">(</span> A <span class="sy0">:</span> <span class="kw1">list</span> of sortable items <span class="br0">)</span>
    n <span class="sy0">=</span> <span class="kw1">length</span><span class="br0">(</span>A<span class="br0">)</span>
    <span class="kw1">repeat</span>
       newn <span class="sy0">=</span> <span class="nu0">0</span>
       for i <span class="sy0">=</span> <span class="nu0">1</span> <span class="kw1">to</span> n<span class="sy0">-</span><span class="nu0">1</span> inclusive <span class="kw1">do</span>
          <span class="kw1">if</span> A<span class="br0">[</span>i<span class="sy0">-</span><span class="nu0">1</span><span class="br0">]</span> <span class="sy0">&gt;</span> A<span class="br0">[</span>i<span class="br0">]</span> <span class="kw1">then</span>
             swap<span class="br0">(</span>A<span class="br0">[</span>i<span class="sy0">-</span><span class="nu0">1</span><span class="br0">]</span><span class="sy0">,</span> A<span class="br0">[</span>i<span class="br0">]</span><span class="br0">)</span>
             newn <span class="sy0">=</span> i
          <span class="kw1">end</span> <span class="kw1">if</span>
       <span class="kw1">end</span> for
       n <span class="sy0">=</span> newn
    <span class="kw1">until</span> n <span class="sy0">=</span> <span class="nu0">0</span>
<span class="kw1">end</span> <span class="kw1">procedure</span>
</pre>
</div>
</div>
<p>Alternate modifications, such as the <a href="http://en.m.wikipedia.org/wiki/Cocktail_shaker_sort" title="Cocktail shaker sort" class="mw-redirect">cocktail shaker sort</a>
 attempt to improve on the bubble sort performance while keeping the 
same idea of repeatedly comparing and swapping adjacent items.</p>
</div><a id="anchor_2" href="#section_2" class="section_anchors back_to_top">↑Jump back a section</a></div><div class="section"><h2 class="section_heading" id="section_3"><button>Show</button><span id="In_practice">In practice</span></h2><div class="content_block" id="content_3">
<div class="thumb tright">
<div class="thumbinner" style="width:282px;">
<a href="http://en.m.wikipedia.org/wiki/File:Bubble_sort_animation.gif" class="image"><img alt="" src="Bubble_sort_files/Bubble_sort_animation.gif" class="thumbimage" width="280" height="237"></a>
<div class="thumbcaption">

A bubble sort, a sorting algorithm that continuously steps through a list, <a href="http://en.m.wikipedia.org/wiki/Swap_%28computer_science%29" title="Swap (computer science)">swapping</a>
 items until they appear in the correct order. Note that the largest end
 gets sorted first, with smaller elements taking longer to move to their
 correct positions.</div>
</div>
</div>
<p>Although bubble sort is one of the simplest sorting algorithms to understand and implement, its <i><a href="http://en.m.wikipedia.org/wiki/Big_O_notation" title="Big O notation">O(n<sup>2</sup>)</a></i>
 complexity means that its efficiency decreases dramatically on lists of
 more than a small number of elements. Even among simple <i>O(n<sup>2</sup>)</i> sorting algorithms, algorithms like <a href="http://en.m.wikipedia.org/wiki/Insertion_sort" title="Insertion sort">insertion sort</a> are usually considerably more efficient.</p>
<p>Due to its simplicity, bubble sort is often used to introduce the 
concept of an algorithm, or a sorting algorithm, to introductory <a href="http://en.m.wikipedia.org/wiki/Computer_science" title="Computer science">computer science</a> students. However, some researchers such as <a href="http://en.m.wikipedia.org/wiki/Owen_Astrachan" title="Owen Astrachan">Owen Astrachan</a>
 have gone to great lengths to disparage bubble sort and its continued 
popularity in computer science education, recommending that it no longer
 even be taught.<sup id="cite_ref-Astrachan2003_0-0" class="reference"><a href="#cite_note-Astrachan2003-0"><span>[</span>1<span>]</span></a></sup></p>
<p>The <a href="http://en.m.wikipedia.org/wiki/Jargon_file" title="Jargon file" class="mw-redirect">Jargon file</a>, which famously calls <a href="http://en.m.wikipedia.org/wiki/Bogosort" title="Bogosort">bogosort</a> "the archetypical perversely awful algorithm", also calls bubble sort "the generic <b>bad</b> algorithm".<sup id="cite_ref-1" class="reference"><a href="#cite_note-1"><span>[</span>2<span>]</span></a></sup><a href="http://en.m.wikipedia.org/wiki/Donald_Knuth" title="Donald Knuth">Donald Knuth</a>, in his famous book <i><a href="http://en.m.wikipedia.org/wiki/The_Art_of_Computer_Programming" title="The Art of Computer Programming">The Art of Computer Programming</a></i>,
 concluded that "the bubble sort seems to have nothing to recommend it, 
except a catchy name and the fact that it leads to some interesting 
theoretical problems", some of which he then discusses.<sup id="cite_ref-Knuth_2-0" class="reference"><a href="#cite_note-Knuth-2"><span>[</span>3<span>]</span></a></sup></p>
<p>Bubble sort is <a href="http://en.m.wikipedia.org/wiki/Asymptotic_notation" title="Asymptotic notation" class="mw-redirect">asymptotically</a> equivalent in running time to <a href="http://en.m.wikipedia.org/wiki/Insertion_sort" title="Insertion sort">insertion sort</a>
 in the worst case, but the two algorithms differ greatly in the number 
of swaps necessary. Experimental results such as those of Astrachan have
 also shown that <a href="http://en.m.wikipedia.org/wiki/Insertion_sort" title="Insertion sort">insertion sort</a>
 performs considerably better even on random lists. For these reasons 
many modern algorithm textbooks avoid using the bubble sort algorithm in
 favor of insertion sort.</p>
<p>Bubble sort also interacts poorly with modern CPU hardware. It 
requires at least twice as many writes as insertion sort, twice as many 
cache misses, and asymptotically more <a href="http://en.m.wikipedia.org/wiki/Branch_prediction" title="Branch prediction" class="mw-redirect">branch mispredictions</a>. Experiments by Astrachan sorting strings in Java show bubble sort to be roughly 5 times slower than <a href="http://en.m.wikipedia.org/wiki/Insertion_sort" title="Insertion sort">insertion sort</a> and 40% slower than <a href="http://en.m.wikipedia.org/wiki/Selection_sort" title="Selection sort">selection sort</a>.<sup id="cite_ref-Astrachan2003_0-1" class="reference"><a href="#cite_note-Astrachan2003-0"><span>[</span>1<span>]</span></a></sup></p>
<p>In computer graphics it is popular for its capability to detect a 
very small error (like swap of just two elements) in almost-sorted 
arrays and fix it with just linear complexity (2n). For example, it is 
used in a polygon filling algorithm, where bounding lines are sorted by 
their x coordinate at a specific scan line (a line parallel to x axis) 
and with incrementing y their order changes (two elements are swapped) 
only at intersections of two lines.</p>
</div><a id="anchor_3" href="#section_3" class="section_anchors back_to_top">↑Jump back a section</a></div><div class="section"><h2 class="section_heading" id="section_4"><button>Show</button><span id="Variations">Variations</span></h2><div class="content_block" id="content_4">
<ul>
<li>
<a href="http://en.m.wikipedia.org/wiki/Odd-even_sort" title="Odd-even sort" class="mw-redirect">Odd-even sort</a> is a parallel version of bubble sort, for message passing systems.</li>
<li>
<a href="http://en.m.wikipedia.org/wiki/Cocktail_sort" title="Cocktail sort">Cocktail sort</a> is another parallel version of the bubble sort</li>
<li>In some cases, the sort works from right to left (the opposite 
direction), which is more appropriate for partially sorted lists, or 
lists with unsorted items added to the end.</li>
</ul>
</div><a id="anchor_4" href="#section_4" class="section_anchors back_to_top">↑Jump back a section</a></div><div class="section"><h2 class="section_heading" id="section_5"><button>Show</button><span id="Misnomer">Misnomer</span></h2><div class="content_block" id="content_5">
<p>Bubble sort has incorrectly been called sinking sort. Sinking sort is
 correctly an alias for insertion sort. This error is largely due to the
 National Institute of Standards and Technology listing sinking sort as 
an alias for bubble sort. <a rel="nofollow" class="external autonumber" href="http://xlinux.nist.gov/dads/HTML/bubblesort.html">[1]</a> In Donald Knuth's <i>The Art of Computer Programming</i>, Volume 3: <i>Sorting and Searching</i>
 he states in section 5.2.1 'Sorting by Insertion', that [the value] 
"settles to its proper level" this method of sorting has often been 
called the <i>sifting</i> or <i>sinking</i> technique.</p>
<p>To clarify we can also observe the behaviour of the two algorithms. 
In bubble sort, the larger bubbles (higher values) bubble up displacing 
the smaller bubbles (lower values). Insertion on the other hand, sinks 
each successive value down to its correct location in the sorted portion
 of the collection.</p>
</div><a id="anchor_5" href="#section_5" class="section_anchors back_to_top">↑Jump back a section</a></div><div class="section"><h2 class="section_heading" id="section_6"><button>Show</button><span id="Notes">Notes</span></h2><div class="content_block" id="content_6">
<ol class="references">
<li id="cite_note-Astrachan2003-0">
<span class="mw-cite-backlink">^ <a href="#cite_ref-Astrachan2003_0-0"><sup><i><b>a</b></i></sup></a> <a href="#cite_ref-Astrachan2003_0-1"><sup><i><b>b</b></i></sup></a></span> <span class="reference-text">Owen Astrachan. Bubble Sort: An Archaeological Algorithmic Analysis. SIGCSE 2003 Hannan Akhtar . <a rel="nofollow" class="external text" href="http://www.cs.duke.edu/%7Eola/papers/bubble.pdf">(pdf)</a></span>
</li>
<li id="cite_note-1">
<span class="mw-cite-backlink"><b><a href="#cite_ref-1">^</a></b></span> <span class="reference-text"><a rel="nofollow" class="external free" href="http://www.jargon.net/jargonfile/b/bogo-sort.html">http://www.jargon.net/jargonfile/b/bogo-sort.html</a></span>
</li>
<li id="cite_note-Knuth-2">
<span class="mw-cite-backlink"><b><a href="#cite_ref-Knuth_2-0">^</a></b></span> <span class="reference-text"><a href="http://en.m.wikipedia.org/wiki/Donald_Knuth" title="Donald Knuth">Donald Knuth</a>. <i><a href="http://en.m.wikipedia.org/wiki/The_Art_of_Computer_Programming" title="The Art of Computer Programming">The Art of Computer Programming</a></i>, Volume 3: <i>Sorting and Searching</i>, Second Edition. Addison-Wesley, 1998. <a href="http://en.m.wikipedia.org/wiki/Special:BookSources/0201896850" class="internal mw-magiclink-isbn">ISBN 0-201-89685-0</a>. Pages 106–110 of section 5.2.2: Sorting by Exchanging.</span>
</li>
</ol>
</div><a id="anchor_6" href="#section_6" class="section_anchors back_to_top">↑Jump back a section</a></div><div class="section"><h2 class="section_heading" id="section_7"><button>Show</button><span id="References">References</span></h2><div class="content_block" id="content_7">
<ul>
<li>
<a href="http://en.m.wikipedia.org/wiki/Donald_Knuth" title="Donald Knuth">Donald Knuth</a>. <i>The Art of Computer Programming</i>, Volume 3: <i>Sorting and Searching</i>, Third Edition. Addison-Wesley, 1997. <a href="http://en.m.wikipedia.org/wiki/Special:BookSources/0201896850" class="internal mw-magiclink-isbn">ISBN 0-201-89685-0</a>. Pages 106–110 of section 5.2.2: Sorting by Exchanging.</li>
<li>
<a href="http://en.m.wikipedia.org/wiki/Thomas_H._Cormen" title="Thomas H. Cormen">Thomas H. Cormen</a>, <a href="http://en.m.wikipedia.org/wiki/Charles_E._Leiserson" title="Charles E. Leiserson">Charles E. Leiserson</a>, <a href="http://en.m.wikipedia.org/wiki/Ronald_L._Rivest" title="Ronald L. Rivest" class="mw-redirect">Ronald L. Rivest</a>, and <a href="http://en.m.wikipedia.org/wiki/Clifford_Stein" title="Clifford Stein">Clifford Stein</a>. <i><a href="http://en.m.wikipedia.org/wiki/Introduction_to_Algorithms" title="Introduction to Algorithms">Introduction to Algorithms</a></i>, Second Edition. MIT Press and McGraw-Hill, 2001. <a href="http://en.m.wikipedia.org/wiki/Special:BookSources/0262032937" class="internal mw-magiclink-isbn">ISBN 0-262-03293-7</a>. Problem 2-2, pg.38.</li>
<li><a rel="nofollow" class="external text" href="https://www.cs.tcd.ie/publications/tech-reports/reports.05/TCD-CS-2005-57.pdf">Sorting in the Presence of Branch Prediction and Caches</a></li>
<li>Fundamentals of Data Structures by Ellis Horowitz, <a href="http://en.m.wikipedia.org/wiki/Sartaj_Sahni" title="Sartaj Sahni">Sartaj Sahni</a> and Susan Anderson-Freed <a href="http://en.m.wikipedia.org/wiki/Special:BookSources/8173716056" class="internal mw-magiclink-isbn">ISBN 81-7371-605-6</a>
</li>
</ul>
</div><a id="anchor_7" href="#section_7" class="section_anchors back_to_top">↑Jump back a section</a></div><div class="section"><h2 class="section_heading" id="section_8"><button>Show</button><span id="External_links">External links</span></h2><div class="content_block" id="content_8">
<table class="metadata mbox-small plainlinks" style="border: 1px solid rgb(170, 170, 170); background-color: rgb(249, 249, 249);"><tbody><tr>
<td class="mbox-image"><img alt="" src="Bubble_sort_files/40px-Wikibooks-logo-en-noslogan.png" width="40" height="40"></td>
<td class="mbox-text" style="">The Wikibook <i><a class="external text" href="http://en.wikibooks.org/wiki/Algorithm_implementation">Algorithm implementation</a></i> has a page on the topic of
<div style="margin-left:10px;"><i><b><a class="external text" href="http://en.wikibooks.org/wiki/Algorithm_implementation/Sorting/Bubble_sort">Bubble sort</a></b></i></div>
</td>
</tr></tbody></table>
<table class="metadata mbox-small plainlinks" style="border: 1px solid rgb(170, 170, 170); background-color: rgb(249, 249, 249);"><tbody><tr>
<td class="mbox-image"><img alt="" src="Bubble_sort_files/30px-Commons-logo.png" width="30" height="40"></td>
<td class="mbox-text" style="">Wikimedia Commons has media related to: <i><b><a class="external text" href="http://commons.wikimedia.org/wiki/Category:Bubble_sort">Bubble sort</a></b></i>
</td>
</tr></tbody></table>
<table class="metadata mbox-small plainlinks" style="border: 1px solid rgb(170, 170, 170); background-color: rgb(249, 249, 249);"><tbody><tr>
<td class="mbox-image"><img alt="" src="Bubble_sort_files/40px-Wikiversity-logo.png" width="40" height="32"></td>
<td class="mbox-text" style="">Wikiversity has learning materials about <i><b><a class="external text" href="http://en.wikiversity.org/wiki/Bubble_sort">Bubble sort</a></b></i>
</td>
</tr></tbody></table>
<ul>
<li><a rel="nofollow" class="external text" href="http://codecodex.com/wiki/Bubble_sort">Bubble Sort implemented in 34 languages</a></li>
<li><a rel="nofollow" class="external text" href="http://www.softpanorama.org/Algorithms/Sorting/bubblesort.shtml">Softpanorama bubblesort page</a></li>
<li><a rel="nofollow" class="external text" href="http://www.algolist.com/Bubble_sort">Illustrated explanation of Bubble sort</a></li>
<li><a rel="nofollow" class="external text" href="http://electrofriends.com/source-codes/software-programs/c/sorting-programs/program-to-sort-the-numbers-using-bubble-sort/">Pictorial step by step procedure of Bubble sort</a></li>
<li>
<a rel="nofollow" class="external text" href="http://www.sorting-algorithms.com/bubble-sort">Animated Sorting Algorithms: Bubble Sort</a> – graphical demonstration and discussion of bubble sort</li>
<li>
<a rel="nofollow" class="external text" href="http://lecture.ecc.u-tokyo.ac.jp/%7Eueda/JavaApplet/BubbleSort.html">Lafore's Bubble Sort</a> (Java applet animation)</li>
<li>
<a rel="nofollow" class="external text" href="http://coderaptors.com/?BubbleSort">A colored graphical Java applet</a> which allows experimentation with initial state and shows statistics</li>
</ul>
<table class="navbox" style="border-spacing: 0pt;" cellspacing="0"><tbody><tr>
<td style="padding: 2px;">
<table class="nowraplinks collapsible autocollapse navbox-inner" style="border-spacing: 0pt; background: none repeat scroll 0% 0% transparent; color: inherit;" cellspacing="0">
<tbody><tr>
<th scope="col" style="" class="navbox-title" colspan="2">
<div class="noprint plainlinks hlist navbar mini" style="">
<ul>
<li class="nv-view"><a href="http://en.m.wikipedia.org/wiki/Template:Sorting" title="Template:Sorting"><span title="View this template" style=";;background:none transparent;border:none;">v</span></a></li>
<li class="nv-talk"><a href="http://en.m.wikipedia.org/wiki/Template_talk:Sorting" title="Template talk:Sorting"><span title="Discuss this template" style=";;background:none transparent;border:none;">t</span></a></li>
<li class="nv-edit"><a class="external text" href="http://en.wikipedia.org/w/index.php?title=Template:Sorting&amp;action=edit"><span title="Edit this template" style=";;background:none transparent;border:none;">e</span></a></li>
</ul>
</div>
<div class="" style="font-size:110%;"><a href="http://en.m.wikipedia.org/wiki/Sorting_algorithm" title="Sorting algorithm">Sorting algorithms</a></div>
</th>
</tr>
<tr style="height: 2px;">
<td></td>
</tr>
<tr>
<th scope="row" class="navbox-group" style="">Theory</th>
<td style="text-align: left; border-left-width: 2px; border-left-style: solid; width: 100%; padding: 0px;" class="navbox-list navbox-odd hlist">
<div style="padding:0em 0.25em">
<ul>
<li><a href="http://en.m.wikipedia.org/wiki/Computational_complexity_theory" title="Computational complexity theory">Computational complexity theory</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Big_O_notation" title="Big O notation">Big O notation</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Total_order" title="Total order">Total order</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/List_%28computing%29" title="List (computing)" class="mw-redirect">Lists</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Sorting_algorithm#Stability" title="Sorting algorithm">Stability</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Comparison_sort" title="Comparison sort">Comparison sort</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Adaptive_sort" title="Adaptive sort">Adaptive sort</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Sorting_network" title="Sorting network">Sorting network</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Integer_sorting" title="Integer sorting">Integer sorting</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height: 2px;">
<td></td>
</tr>
<tr>
<th scope="row" class="navbox-group" style="">Exchange sorts</th>
<td style="text-align: left; border-left-width: 2px; border-left-style: solid; width: 100%; padding: 0px;" class="navbox-list navbox-even hlist">
<div style="padding:0em 0.25em">
<ul>
<li><strong class="selflink">Bubble sort</strong></li>
<li><a href="http://en.m.wikipedia.org/wiki/Cocktail_sort" title="Cocktail sort">Cocktail sort</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Odd%E2%80%93even_sort" title="Odd–even sort">Odd–even sort</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Comb_sort" title="Comb sort">Comb sort</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Gnome_sort" title="Gnome sort">Gnome sort</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Quicksort" title="Quicksort">Quicksort</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Stooge_sort" title="Stooge sort">Stooge sort</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Bogosort" title="Bogosort">Bogosort</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height: 2px;">
<td></td>
</tr>
<tr>
<th scope="row" class="navbox-group" style="">Selection sorts</th>
<td style="text-align: left; border-left-width: 2px; border-left-style: solid; width: 100%; padding: 0px;" class="navbox-list navbox-odd hlist">
<div style="padding:0em 0.25em">
<ul>
<li><a href="http://en.m.wikipedia.org/wiki/Selection_sort" title="Selection sort">Selection sort</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Heapsort" title="Heapsort">Heapsort</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Smoothsort" title="Smoothsort">Smoothsort</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Cartesian_tree#Application_in_sorting" title="Cartesian tree">Cartesian tree sort</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Tournament_sort" title="Tournament sort">Tournament sort</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Cycle_sort" title="Cycle sort">Cycle sort</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height: 2px;">
<td></td>
</tr>
<tr>
<th scope="row" class="navbox-group" style="">Insertion sorts</th>
<td style="text-align: left; border-left-width: 2px; border-left-style: solid; width: 100%; padding: 0px;" class="navbox-list navbox-even hlist">
<div style="padding:0em 0.25em">
<ul>
<li><a href="http://en.m.wikipedia.org/wiki/Insertion_sort" title="Insertion sort">Insertion sort</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Shellsort" title="Shellsort">Shellsort</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Tree_sort" title="Tree sort">Tree sort</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Library_sort" title="Library sort">Library sort</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Patience_sorting" title="Patience sorting">Patience sorting</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height: 2px;">
<td></td>
</tr>
<tr>
<th scope="row" class="navbox-group" style="">Merge sorts</th>
<td style="text-align: left; border-left-width: 2px; border-left-style: solid; width: 100%; padding: 0px;" class="navbox-list navbox-odd hlist">
<div style="padding:0em 0.25em">
<ul>
<li><a href="http://en.m.wikipedia.org/wiki/Merge_sort" title="Merge sort">Merge sort</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Polyphase_merge_sort" title="Polyphase merge sort">Polyphase merge sort</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Strand_sort" title="Strand sort">Strand sort</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height: 2px;">
<td></td>
</tr>
<tr>
<th scope="row" class="navbox-group" style="">Distribution sorts</th>
<td style="text-align: left; border-left-width: 2px; border-left-style: solid; width: 100%; padding: 0px;" class="navbox-list navbox-even hlist">
<div style="padding:0em 0.25em">
<ul>
<li><a href="http://en.m.wikipedia.org/wiki/American_flag_sort" title="American flag sort">American flag sort</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Bead_sort" title="Bead sort">Bead sort</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Bucket_sort" title="Bucket sort">Bucket sort</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Burstsort" title="Burstsort">Burstsort</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Counting_sort" title="Counting sort">Counting sort</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Pigeonhole_sort" title="Pigeonhole sort">Pigeonhole sort</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Proxmap_sort" title="Proxmap sort">Proxmap sort</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Radix_sort" title="Radix sort">Radix sort</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Flashsort" title="Flashsort">Flashsort</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height: 2px;">
<td></td>
</tr>
<tr>
<th scope="row" class="navbox-group" style="">Concurrent sorts</th>
<td style="text-align: left; border-left-width: 2px; border-left-style: solid; width: 100%; padding: 0px;" class="navbox-list navbox-odd hlist">
<div style="padding:0em 0.25em">
<ul>
<li><a href="http://en.m.wikipedia.org/wiki/Bitonic_sorter" title="Bitonic sorter">Bitonic sorter</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Batcher_odd%E2%80%93even_mergesort" title="Batcher odd–even mergesort">Batcher odd–even mergesort</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Pairwise_sorting_network" title="Pairwise sorting network">Pairwise sorting network</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height: 2px;">
<td></td>
</tr>
<tr>
<th scope="row" class="navbox-group" style="">Hybrid sorts</th>
<td style="text-align: left; border-left-width: 2px; border-left-style: solid; width: 100%; padding: 0px;" class="navbox-list navbox-even hlist">
<div style="padding:0em 0.25em">
<ul>
<li><a href="http://en.m.wikipedia.org/wiki/Timsort" title="Timsort">Timsort</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Introsort" title="Introsort">Introsort</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Spreadsort" title="Spreadsort">Spreadsort</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/UnShuffle_sort" title="UnShuffle sort">UnShuffle sort</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/JSort" title="JSort">JSort</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height: 2px;">
<td></td>
</tr>
<tr>
<th scope="row" class="navbox-group" style="">Other</th>
<td style="text-align: left; border-left-width: 2px; border-left-style: solid; width: 100%; padding: 0px;" class="navbox-list navbox-odd hlist">
<div style="padding:0em 0.25em">
<ul>
<li><a href="http://en.m.wikipedia.org/wiki/Topological_sorting" title="Topological sorting">Topological sorting</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Pancake_sorting" title="Pancake sorting">Pancake sorting</a></li>
<li><a href="http://en.m.wikipedia.org/wiki/Spaghetti_sort" title="Spaghetti sort">Spaghetti sort</a></li>
</ul>
</div>
</td>
</tr>
</tbody></table>
</td>
</tr></tbody></table>

</div>
</div>		</div>
	</div>
			<div id="footer">
			<h2 class="section_heading" id="section_footer"><button>Show</button>
		<div class="license">Wikipedia ™</div>		<span class="toggleCopyright">
			<span class="more">more</span><span class="less">less</span>
		</span>
	</h2>
	<div class="content_block" id="content_footer">
		<ul class="settings">
			<li>
				<span class="left separator"><a id="mw-mf-display-toggle" href="http://en.wikipedia.org/w/index.php?title=Bubble_sort&amp;mobileaction=toggle_view_desktop">Desktop</a></span><span class="right">Mobile</span>
			</li>
			<li>
				<span class="left"><a href="http://wikimediafoundation.org/wiki/Terms_of_use?useformat=mobile">Terms of Use</a></span><span class="right">Images ON / <a href="http://en.m.wikipedia.org/w/index.php?title=Special:MobileOptions/DisableImages&amp;returnto=Bubble+sort&amp;mobiletoken=5c89e355d2af09275b3b2ed3653e1683" title="Special:MobileOptions/DisableImages" id="imagetoggle">OFF</a></span>
			</li>
			<li class="notice">
				Article by <a href="http://en.m.wikipedia.org/w/index.php?title=Bubble_sort&amp;action=history">contributors</a> like you<br>
				Content available under <a href="http://en.m.wikipedia.org/wiki/Wikipedia:Text_of_Creative_Commons_Attribution-ShareAlike_3.0_Unported_License?useformat=mobile">CC BY-SA 3.0</a>			</li>
		</ul>
		<ul class="links">
			<li>
				<a href="http://en.m.wikipedia.org/w/index.php?title=Special:MobileFeedback&amp;returnto=Bubble+sort&amp;feedbacksource=MobileFrontend">Contact</a>
			</li><li>
			<a href="http://wikimediafoundation.org/wiki/Privacy_policy" title="wikimedia:Privacy policy">Privacy</a></li><li>
			<a href="http://en.m.wikipedia.org/wiki/Wikipedia:About" title="Wikipedia:About">About</a></li><li>
			<a href="http://en.m.wikipedia.org/wiki/Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
		</ul>
	</div>
	</div>
				<!--[if gt IE 7]><!-->
		<script type="text/javascript">mw={loader:{state:function(){}}};</script>		<script src="Bubble_sort_files/load_002.php" type="text/javascript"></script>
<script src="Bubble_sort_files/load.php" type="text/javascript"></script>	<script type="text/javascript">
	window.onload = function() {
		mw.mobileFrontend.init();
	};
	</script>
	<!----><!--[endif]---->
	
	<div style="display: none;" id="mf-references"><div></div><button>close</button></div></body></html>